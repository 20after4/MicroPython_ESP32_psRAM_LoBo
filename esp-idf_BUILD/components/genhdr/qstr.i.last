# 1 "modmachine.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "modmachine.c"
# 30 "modmachine.c"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdint.h" 1
# 12 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdint.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/machine/_default_types.h" 1
# 11 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/machine/_default_types.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/features.h" 1
# 12 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/machine/_default_types.h" 2





typedef signed char __int8_t ;
typedef unsigned char __uint8_t ;


typedef signed short __int16_t;
typedef unsigned short __uint16_t;


typedef signed int __int32_t;
typedef unsigned int __uint32_t;


typedef signed long long __int64_t;
typedef unsigned long long __uint64_t;


typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;


typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;


typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;


typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;


typedef int __intptr_t;
typedef unsigned int __uintptr_t;
# 13 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdint.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/_intsup.h" 1
# 14 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdint.h" 2






typedef __int8_t int8_t ;
typedef __uint8_t uint8_t ;




typedef __int_least8_t int_least8_t;
typedef __uint_least8_t uint_least8_t;




typedef __int16_t int16_t ;
typedef __uint16_t uint16_t ;




typedef __int_least16_t int_least16_t;
typedef __uint_least16_t uint_least16_t;




typedef __int32_t int32_t ;
typedef __uint32_t uint32_t ;




typedef __int_least32_t int_least32_t;
typedef __uint_least32_t uint_least32_t;




typedef __int64_t int64_t ;
typedef __uint64_t uint64_t ;




typedef __int_least64_t int_least64_t;
typedef __uint_least64_t uint_least64_t;
# 74 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdint.h"
  typedef int int_fast8_t;
  typedef unsigned int uint_fast8_t;
# 84 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdint.h"
  typedef int int_fast16_t;
  typedef unsigned int uint_fast16_t;
# 94 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdint.h"
  typedef int int_fast32_t;
  typedef unsigned int uint_fast32_t;
# 104 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdint.h"
  typedef long long int int_fast64_t;
  typedef long long unsigned int uint_fast64_t;
# 153 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdint.h"
  typedef long long int intmax_t;
# 162 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdint.h"
  typedef long long unsigned int uintmax_t;






typedef __intptr_t intptr_t;
typedef __uintptr_t uintptr_t;
# 31 "modmachine.c" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h" 1
# 29 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/_ansi.h" 1
# 15 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/_ansi.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/newlib.h" 1
# 16 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/_ansi.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/config.h" 1



# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/machine/ieeefp.h" 1
# 5 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/config.h" 2
# 189 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/config.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/core-isa.h" 1
# 190 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/config.h" 2
# 17 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/_ansi.h" 2
# 30 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h" 2





# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/cdefs.h" 1
# 45 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/cdefs.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 1 3 4
# 216 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 3 4

# 216 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 3 4
typedef unsigned int size_t;
# 46 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/cdefs.h" 2
# 36 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 1 3 4
# 149 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 3 4
typedef int ptrdiff_t;
# 328 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 3 4
typedef short unsigned int wchar_t;
# 37 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h" 2


# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stdarg.h" 1 3 4
# 40 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 40 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h" 2







# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h" 1
# 13 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/_ansi.h" 1
# 14 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 1 3 4
# 15 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/_types.h" 1
# 12 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/_types.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/machine/_types.h" 1
# 13 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/_types.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/lock.h" 1
# 11 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/lock.h"

# 11 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/lock.h"
typedef int _lock_t;
typedef _lock_t _LOCK_RECURSIVE_T;
typedef _lock_t _LOCK_T;
# 28 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/lock.h"
void _lock_init(_lock_t *lock);
void _lock_init_recursive(_lock_t *lock);
void _lock_close(_lock_t *lock);
void _lock_close_recursive(_lock_t *lock);
void _lock_acquire(_lock_t *lock);
void _lock_acquire_recursive(_lock_t *lock);
int _lock_try_acquire(_lock_t *lock);
int _lock_try_acquire_recursive(_lock_t *lock);
void _lock_release(_lock_t *lock);
void _lock_release_recursive(_lock_t *lock);
# 14 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/_types.h" 2


typedef long _off_t;



typedef short __dev_t;



typedef unsigned short __uid_t;


typedef unsigned short __gid_t;



__extension__ typedef long long _off64_t;







typedef long _fpos_t;
# 55 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/_types.h"
typedef signed int _ssize_t;
# 67 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/_types.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 1 3 4
# 357 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 3 4

# 357 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 3 4
typedef unsigned int wint_t;
# 68 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/_types.h" 2




# 71 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/_types.h"
typedef struct
{
  int __count;
  union
  {
    wint_t __wch;
    unsigned char __wchb[4];
  } __value;
} _mbstate_t;



typedef _LOCK_RECURSIVE_T _flock_t;




typedef void *_iconv_t;
# 16 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h" 2






typedef unsigned long __ULong;
# 38 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h"
struct _reent;






struct _Bigint
{
  struct _Bigint *_next;
  int _k, _maxwds, _sign, _wds;
  __ULong _x[1];
};


struct __tm
{
  int __tm_sec;
  int __tm_min;
  int __tm_hour;
  int __tm_mday;
  int __tm_mon;
  int __tm_year;
  int __tm_wday;
  int __tm_yday;
  int __tm_isdst;
};







struct _on_exit_args {
 void * _fnargs[32];
 void * _dso_handle[32];

 __ULong _fntypes;


 __ULong _is_cxa;
};


struct _atexit {
 struct _atexit *_next;
 int _ind;
 void (*_fns[32])(void);
        struct _on_exit_args * _on_exit_args_ptr;
};
# 115 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h"
struct __sbuf {
 unsigned char *_base;
 int _size;
};
# 151 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h"
struct __sFILE_fake {
  unsigned char *_p;
  int _r;
  int _w;
  short _flags;
  short _file;
  struct __sbuf _bf;
  int _lbfsize;

  struct _reent *_data;
};




extern void __sinit (struct _reent *);
# 179 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h"
struct __sFILE {
  unsigned char *_p;
  int _r;
  int _w;
  short _flags;
  short _file;
  struct __sbuf _bf;
  int _lbfsize;


  struct _reent *_data;



  void * _cookie;

  int (* _read) (struct _reent *, void *, char *, int)
                                          ;
  int (* _write) (struct _reent *, void *, const char *, int)

                                   ;
  _fpos_t (* _seek) (struct _reent *, void *, _fpos_t, int);
  int (* _close) (struct _reent *, void *);


  struct __sbuf _ub;
  unsigned char *_up;
  int _ur;


  unsigned char _ubuf[3];
  unsigned char _nbuf[1];


  struct __sbuf _lb;


  int _blksize;
  _off_t _offset;






  _flock_t _lock;

  _mbstate_t _mbstate;
  int _flags2;
};
# 285 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h"
typedef struct __sFILE __FILE;



struct _glue
{
  struct _glue *_next;
  int _niobs;
  __FILE *_iobs;
};
# 317 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h"
struct _rand48 {
  unsigned short _seed[3];
  unsigned short _mult[3];
  unsigned short _add;


  __extension__ unsigned long long _rand_next;

};
# 342 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h"
struct _mprec
{

  struct _Bigint *_result;
  int _result_k;
  struct _Bigint *_p5s;
  struct _Bigint **_freelist;
};


struct _misc_reent
{

  char *_strtok_last;
  _mbstate_t _mblen_state;
  _mbstate_t _wctomb_state;
  _mbstate_t _mbtowc_state;
  char _l64a_buf[8];
  int _getdate_err;
  _mbstate_t _mbrlen_state;
  _mbstate_t _mbrtowc_state;
  _mbstate_t _mbsrtowcs_state;
  _mbstate_t _wcrtomb_state;
  _mbstate_t _wcsrtombs_state;
};



struct _reent
{


  int _errno;




  __FILE *_stdin, *_stdout, *_stderr;

  int _inc;

  char *_emergency;

  int __sdidinit;

  int _current_category;
  const char *_current_locale;

  struct _mprec *_mp;

  void (* __cleanup) (struct _reent *);

  int _gamma_signgam;


  int _cvtlen;
  char *_cvtbuf;

  struct _rand48 *_r48;
  struct __tm *_localtime_buf;
  char *_asctime_buf;


  void (**(_sig_func))(int);



  struct _atexit *_atexit;
  struct _atexit _atexit0;


  struct _glue __sglue;
  __FILE *__sf;
  struct _misc_reent *_misc;
  char *_signal_buf;
};

extern const struct __sFILE_fake __sf_fake_stdin;
extern const struct __sFILE_fake __sf_fake_stdout;
extern const struct __sFILE_fake __sf_fake_stderr;
# 766 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/reent.h"
extern struct _reent *_global_impure_ptr ;

void _reclaim_reent (struct _reent *);





  struct _reent * __getreent (void);
# 48 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/types.h" 1
# 69 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/types.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 1 3 4
# 70 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/types.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/machine/types.h" 1
# 19 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/machine/types.h"
typedef long int __off_t;
typedef int __pid_t;

__extension__ typedef long long int __loff_t;
# 71 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/types.h" 2
# 93 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/types.h"
typedef unsigned char u_char;



typedef unsigned short u_short;



typedef unsigned int u_int;



typedef unsigned long u_long;





typedef unsigned short ushort;
typedef unsigned int uint;
typedef unsigned long ulong;



typedef unsigned long clock_t;




typedef long time_t;







struct timespec {
  time_t tv_sec;
  long tv_nsec;
};


struct itimerspec {
  struct timespec it_interval;
  struct timespec it_value;
};


typedef long daddr_t;



typedef char * caddr_t;
# 155 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/types.h"
typedef unsigned short ino_t;
# 184 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/types.h"
typedef _off_t off_t;
typedef __dev_t dev_t;
typedef __uid_t uid_t;
typedef __gid_t gid_t;





typedef int pid_t;







typedef long key_t;

typedef _ssize_t ssize_t;
# 217 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/types.h"
typedef unsigned int mode_t __attribute__ ((__mode__ (__SI__)));




typedef unsigned short nlink_t;
# 244 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/types.h"
typedef long fd_mask;







typedef struct _types_fd_set {
 fd_mask fds_bits[(((64)+(((sizeof (fd_mask) * 8))-1))/((sizeof (fd_mask) * 8)))];
} _types_fd_set;
# 275 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/types.h"
typedef unsigned long clockid_t;




typedef unsigned long timer_t;



typedef unsigned long useconds_t;
typedef long suseconds_t;
# 49 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h" 2



typedef __FILE FILE;




typedef _fpos_t fpos_t;





# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/stdio.h" 1
# 64 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h" 2
# 164 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h"
FILE * tmpfile (void);
char * tmpnam (char *);

char * tempnam (const char *, const char *);

int fclose (FILE *);
int fflush (FILE *);
FILE * freopen (const char *restrict, const char *restrict, FILE *restrict);
void setbuf (FILE *restrict, char *restrict);
int setvbuf (FILE *restrict, char *restrict, int, size_t);
int fprintf (FILE *restrict, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int fscanf (FILE *restrict, const char *restrict, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int printf (const char *restrict, ...) __attribute__ ((__format__ (__printf__, 1, 2)))
                                                            ;
int scanf (const char *restrict, ...) __attribute__ ((__format__ (__scanf__, 1, 2)))
                                                           ;
int sscanf (const char *restrict, const char *restrict, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int vfprintf (FILE *restrict, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int vprintf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 1, 0)))
                                                            ;
int vsprintf (char *restrict, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int fgetc (FILE *);
char * fgets (char *restrict, int, FILE *restrict);
int fputc (int, FILE *);
int fputs (const char *restrict, FILE *restrict);
int getc (FILE *);
int getchar (void);
char * gets (char *);
int putc (int, FILE *);
int putchar (int);
int puts (const char *);
int ungetc (int, FILE *);
size_t fread (void * restrict, size_t _size, size_t _n, FILE *restrict);
size_t fwrite (const void * restrict , size_t _size, size_t _n, FILE *);



int fgetpos (FILE *restrict, fpos_t *restrict);

int fseek (FILE *, long, int);



int fsetpos (FILE *, const fpos_t *);

long ftell ( FILE *);
void rewind (FILE *);
void clearerr (FILE *);
int feof (FILE *);
int ferror (FILE *);
void perror (const char *);

FILE * fopen (const char *restrict _name, const char *restrict _type);
int sprintf (char *restrict, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int remove (const char *);
int rename (const char *, const char *);
# 235 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h"
int fseeko (FILE *, off_t, int);
off_t ftello ( FILE *);







int asiprintf (char **, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
char * asniprintf (char *, size_t *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
char * asnprintf (char *restrict, size_t *restrict, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int asprintf (char **restrict, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;

int diprintf (int, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;

int fiprintf (FILE *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int fiscanf (FILE *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int iprintf (const char *, ...) __attribute__ ((__format__ (__printf__, 1, 2)))
                                                            ;
int iscanf (const char *, ...) __attribute__ ((__format__ (__scanf__, 1, 2)))
                                                           ;
int siprintf (char *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int siscanf (const char *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int snprintf (char *restrict, size_t, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int sniprintf (char *, size_t, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int vasiprintf (char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
char * vasniprintf (char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
char * vasnprintf (char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int vasprintf (char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int vdiprintf (int, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int vfiprintf (FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int vfiscanf (FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int vfscanf (FILE *restrict, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int viprintf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 1, 0)))
                                                            ;
int viscanf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 1, 0)))
                                                           ;
int vscanf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 1, 0)))
                                                           ;
int vsiprintf (char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int vsiscanf (const char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int vsniprintf (char *, size_t, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int vsnprintf (char *restrict, size_t, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int vsscanf (const char *restrict, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
# 313 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h"
FILE * fdopen (int, const char *);

int fileno (FILE *);
int getw (FILE *);
int pclose (FILE *);
FILE * popen (const char *, const char *);
int putw (int, FILE *);
void setbuffer (FILE *, char *, int);
int setlinebuf (FILE *);
int getc_unlocked (FILE *);
int getchar_unlocked (void);
void flockfile (FILE *);
int ftrylockfile (FILE *);
void funlockfile (FILE *);
int putc_unlocked (int, FILE *);
int putchar_unlocked (int);
# 338 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h"
int dprintf (int, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;

FILE * fmemopen (void *restrict, size_t, const char *restrict);


FILE * open_memstream (char **, size_t *);

int renameat (int, const char *, int, const char *);

int vdprintf (int, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;







int _asiprintf_r (struct _reent *, char **, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
char * _asniprintf_r (struct _reent *, char *, size_t *, const char *, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
char * _asnprintf_r (struct _reent *, char *restrict, size_t *restrict, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
int _asprintf_r (struct _reent *, char **restrict, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _diprintf_r (struct _reent *, int, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _dprintf_r (struct _reent *, int, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _fclose_r (struct _reent *, FILE *);
int _fcloseall_r (struct _reent *);
FILE * _fdopen_r (struct _reent *, int, const char *);
int _fflush_r (struct _reent *, FILE *);
int _fgetc_r (struct _reent *, FILE *);
int _fgetc_unlocked_r (struct _reent *, FILE *);
char * _fgets_r (struct _reent *, char *restrict, int, FILE *restrict);
char * _fgets_unlocked_r (struct _reent *, char *restrict, int, FILE *restrict);




int _fgetpos_r (struct _reent *, FILE *, fpos_t *);
int _fsetpos_r (struct _reent *, FILE *, const fpos_t *);

int _fiprintf_r (struct _reent *, FILE *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _fiscanf_r (struct _reent *, FILE *, const char *, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
FILE * _fmemopen_r (struct _reent *, void *restrict, size_t, const char *restrict);
FILE * _fopen_r (struct _reent *, const char *restrict, const char *restrict);
FILE * _freopen_r (struct _reent *, const char *restrict, const char *restrict, FILE *restrict);
int _fprintf_r (struct _reent *, FILE *restrict, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _fpurge_r (struct _reent *, FILE *);
int _fputc_r (struct _reent *, int, FILE *);
int _fputc_unlocked_r (struct _reent *, int, FILE *);
int _fputs_r (struct _reent *, const char *restrict, FILE *restrict);
int _fputs_unlocked_r (struct _reent *, const char *restrict, FILE *restrict);
size_t _fread_r (struct _reent *, void * restrict, size_t _size, size_t _n, FILE *restrict);
size_t _fread_unlocked_r (struct _reent *, void * restrict, size_t _size, size_t _n, FILE *restrict);
int _fscanf_r (struct _reent *, FILE *restrict, const char *restrict, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
int _fseek_r (struct _reent *, FILE *, long, int);
int _fseeko_r (struct _reent *, FILE *, _off_t, int);
long _ftell_r (struct _reent *, FILE *);
_off_t _ftello_r (struct _reent *, FILE *);
void _rewind_r (struct _reent *, FILE *);
size_t _fwrite_r (struct _reent *, const void * restrict, size_t _size, size_t _n, FILE *restrict);
size_t _fwrite_unlocked_r (struct _reent *, const void * restrict, size_t _size, size_t _n, FILE *restrict);
int _getc_r (struct _reent *, FILE *);
int _getc_unlocked_r (struct _reent *, FILE *);
int _getchar_r (struct _reent *);
int _getchar_unlocked_r (struct _reent *);
char * _gets_r (struct _reent *, char *);
int _iprintf_r (struct _reent *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int _iscanf_r (struct _reent *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
FILE * _open_memstream_r (struct _reent *, char **, size_t *);
void _perror_r (struct _reent *, const char *);
int _printf_r (struct _reent *, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int _putc_r (struct _reent *, int, FILE *);
int _putc_unlocked_r (struct _reent *, int, FILE *);
int _putchar_unlocked_r (struct _reent *, int);
int _putchar_r (struct _reent *, int);
int _puts_r (struct _reent *, const char *);
int _remove_r (struct _reent *, const char *);
int _rename_r (struct _reent *, const char *_old, const char *_new)
                                          ;
int _scanf_r (struct _reent *, const char *restrict, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int _siprintf_r (struct _reent *, char *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _siscanf_r (struct _reent *, const char *, const char *, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
int _sniprintf_r (struct _reent *, char *, size_t, const char *, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
int _snprintf_r (struct _reent *, char *restrict, size_t, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
int _sprintf_r (struct _reent *, char *restrict, const char *restrict, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _sscanf_r (struct _reent *, const char *restrict, const char *restrict, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
char * _tempnam_r (struct _reent *, const char *, const char *);
FILE * _tmpfile_r (struct _reent *);
char * _tmpnam_r (struct _reent *, char *);
int _ungetc_r (struct _reent *, int, FILE *);
int _vasiprintf_r (struct _reent *, char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
char * _vasniprintf_r (struct _reent*, char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
char * _vasnprintf_r (struct _reent*, char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
int _vasprintf_r (struct _reent *, char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vdiprintf_r (struct _reent *, int, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vdprintf_r (struct _reent *, int, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vfiprintf_r (struct _reent *, FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vfiscanf_r (struct _reent *, FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;
int _vfprintf_r (struct _reent *, FILE *restrict, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vfscanf_r (struct _reent *, FILE *restrict, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;
int _viprintf_r (struct _reent *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int _viscanf_r (struct _reent *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int _vprintf_r (struct _reent *, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int _vscanf_r (struct _reent *, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int _vsiprintf_r (struct _reent *, char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vsiscanf_r (struct _reent *, const char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;
int _vsniprintf_r (struct _reent *, char *, size_t, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
int _vsnprintf_r (struct _reent *, char *restrict, size_t, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
int _vsprintf_r (struct _reent *, char *restrict, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vsscanf_r (struct _reent *, const char *restrict, const char *restrict, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;



int fpurge (FILE *);
ssize_t __getdelim (char **, size_t *, int, FILE *);
ssize_t __getline (char **, size_t *, FILE *);


void clearerr_unlocked (FILE *);
int feof_unlocked (FILE *);
int ferror_unlocked (FILE *);
int fileno_unlocked (FILE *);
int fflush_unlocked (FILE *);
int fgetc_unlocked (FILE *);
int fputc_unlocked (int, FILE *);
size_t fread_unlocked (void * restrict, size_t _size, size_t _n, FILE *restrict);
size_t fwrite_unlocked (const void * restrict , size_t _size, size_t _n, FILE *);
# 538 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h"
int __srget_r (struct _reent *, FILE *);
int __swbuf_r (struct _reent *, int, FILE *);
# 562 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h"
FILE *funopen (const void * __cookie, int (*__readfn)(void * __cookie, char *__buf, int __n), int (*__writefn)(void * __cookie, const char *__buf, int __n), fpos_t (*__seekfn)(void * __cookie, fpos_t __off, int __whence), int (*__closefn)(void * __cookie))





                                   ;
FILE *_funopen_r (struct _reent *, const void * __cookie, int (*__readfn)(void * __cookie, char *__buf, int __n), int (*__writefn)(void * __cookie, const char *__buf, int __n), fpos_t (*__seekfn)(void * __cookie, fpos_t __off, int __whence), int (*__closefn)(void * __cookie))





                                   ;







typedef ssize_t cookie_read_function_t(void *__cookie, char *__buf, size_t __n);
typedef ssize_t cookie_write_function_t(void *__cookie, const char *__buf,
     size_t __n);




typedef int cookie_seek_function_t(void *__cookie, off_t *__off, int __whence);

typedef int cookie_close_function_t(void *__cookie);
typedef struct
{


  cookie_read_function_t *read;
  cookie_write_function_t *write;
  cookie_seek_function_t *seek;
  cookie_close_function_t *close;
} cookie_io_functions_t;
FILE *fopencookie (void *__cookie, const char *__mode, cookie_io_functions_t __functions)
                                                         ;
FILE *_fopencookie_r (struct _reent *, void *__cookie, const char *__mode, cookie_io_functions_t __functions)
                                                         ;
# 725 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdio.h"

# 32 "modmachine.c" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/string.h" 1
# 17 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/string.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 1 3 4
# 18 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/string.h" 2



void * memchr (const void *, int, size_t);
int memcmp (const void *, const void *, size_t);
void * memcpy (void * restrict, const void * restrict, size_t);
void * memmove (void *, const void *, size_t);
void * memset (void *, int, size_t);
char *strcat (char *restrict, const char *restrict);
char *strchr (const char *, int);
int strcmp (const char *, const char *);
int strcoll (const char *, const char *);
char *strcpy (char *restrict, const char *restrict);
size_t strcspn (const char *, const char *);
char *strerror (int);
size_t strlen (const char *);
char *strncat (char *restrict, const char *restrict, size_t);
int strncmp (const char *, const char *, size_t);
char *strncpy (char *restrict, const char *restrict, size_t);
char *strpbrk (const char *, const char *);
char *strrchr (const char *, int);
size_t strspn (const char *, const char *);
char *strstr (const char *, const char *);

char *strtok (char *restrict, const char *restrict);

size_t strxfrm (char *restrict, const char *restrict, size_t);


char *strtok_r (char *restrict, const char *restrict, char **restrict);


int bcmp (const void *, const void *, size_t);
void bcopy (const void *, void *, size_t);
void bzero (void *, size_t);
int ffs (int);
char *index (const char *, int);


void * memccpy (void * restrict, const void * restrict, int, size_t);





void * memrchr (const void *, int, size_t);




char *rindex (const char *, int);

char *stpcpy (char *restrict, const char *restrict);
char *stpncpy (char *restrict, const char *restrict, size_t);

int strcasecmp (const char *, const char *);






char *strdup (const char *);


char *_strdup_r (struct _reent *, const char *);


char *strndup (const char *, size_t);



char *_strndup_r (struct _reent *, const char *, size_t);
# 106 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/string.h"
int strerror_r (int, char *, size_t)
             __asm__ ("" "__xpg_strerror_r");







char * _strerror_r (struct _reent *, int, int, int *);


size_t strlcat (char *, const char *, size_t);
size_t strlcpy (char *, const char *, size_t);


int strncasecmp (const char *, const char *, size_t);



size_t strnlen (const char *, size_t);


char *strsep (char **, const char *);







char *strlwr (char *);
char *strupr (char *);



char *strsignal (int __signo);
# 163 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/string.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/sys/string.h" 1
# 164 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/string.h" 2


# 33 "modmachine.c" 2

# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOS.h" 1
# 76 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOS.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 1 3 4
# 77 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOS.h" 2
# 99 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOS.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOSConfig.h" 1
# 73 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOSConfig.h"
# 1 "./sdkconfig.h" 1
# 74 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOSConfig.h" 2
# 102 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOSConfig.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_config.h" 1
# 40 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_config.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h" 1
# 148 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h"
extern const unsigned int Xthal_rev_no;







extern void xthal_save_extra(void *base);
extern void xthal_restore_extra(void *base);

extern void xthal_save_cpregs(void *base, int);
extern void xthal_restore_cpregs(void *base, int);

extern void xthal_save_cp0(void *base);
extern void xthal_save_cp1(void *base);
extern void xthal_save_cp2(void *base);
extern void xthal_save_cp3(void *base);
extern void xthal_save_cp4(void *base);
extern void xthal_save_cp5(void *base);
extern void xthal_save_cp6(void *base);
extern void xthal_save_cp7(void *base);
extern void xthal_restore_cp0(void *base);
extern void xthal_restore_cp1(void *base);
extern void xthal_restore_cp2(void *base);
extern void xthal_restore_cp3(void *base);
extern void xthal_restore_cp4(void *base);
extern void xthal_restore_cp5(void *base);
extern void xthal_restore_cp6(void *base);
extern void xthal_restore_cp7(void *base);

extern void* Xthal_cpregs_save_fn[8];
extern void* Xthal_cpregs_restore_fn[8];

extern void* Xthal_cpregs_save_nw_fn[8];
extern void* Xthal_cpregs_restore_nw_fn[8];





extern const unsigned int Xthal_extra_size;
extern const unsigned int Xthal_extra_align;
extern const unsigned int Xthal_cpregs_size[8];
extern const unsigned int Xthal_cpregs_align[8];
extern const unsigned int Xthal_all_extra_size;
extern const unsigned int Xthal_all_extra_align;

extern const char * const Xthal_cp_names[8];







extern void xthal_init_mem_extra(void *);

extern void xthal_init_mem_cp(void *, int);


extern const unsigned int Xthal_num_coprocessors;


extern const unsigned char Xthal_cp_num;

extern const unsigned char Xthal_cp_max;



extern const unsigned int Xthal_cp_mask;
# 237 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h"
extern const unsigned int Xthal_num_aregs;
extern const unsigned char Xthal_num_aregs_log2;







extern const unsigned char Xthal_icache_linewidth;
extern const unsigned char Xthal_dcache_linewidth;

extern const unsigned short Xthal_icache_linesize;
extern const unsigned short Xthal_dcache_linesize;


extern const unsigned int Xthal_icache_size;
extern const unsigned int Xthal_dcache_size;

extern const unsigned char Xthal_dcache_is_writeback;



extern void xthal_icache_region_invalidate( void *addr, unsigned size );
extern void xthal_dcache_region_invalidate( void *addr, unsigned size );

extern void xthal_icache_line_invalidate(void *addr);
extern void xthal_dcache_line_invalidate(void *addr);


extern void xthal_dcache_region_writeback( void *addr, unsigned size );

extern void xthal_dcache_line_writeback(void *addr);


extern void xthal_dcache_region_writeback_inv( void *addr, unsigned size );

extern void xthal_dcache_line_writeback_inv(void *addr);

extern void xthal_icache_sync( void );

extern void xthal_dcache_sync( void );



extern unsigned int xthal_icache_get_ways(void);

extern void xthal_icache_set_ways(unsigned int ways);

extern unsigned int xthal_dcache_get_ways(void);

extern void xthal_dcache_set_ways(unsigned int ways);


extern void xthal_cache_coherence_on( void );
extern void xthal_cache_coherence_off( void );

extern void xthal_cache_coherence_optin( void );
extern void xthal_cache_coherence_optout( void );
# 339 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h"
extern int xthal_get_cache_prefetch( void );
extern int xthal_set_cache_prefetch( int );
extern int xthal_set_cache_prefetch_long( unsigned long long );
# 352 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h"
extern const int Xthal_debug_configured;


extern unsigned int xthal_set_soft_break(void *addr);
extern void xthal_remove_soft_break(void *addr, unsigned int);
# 374 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h"
extern int xthal_disassemble( unsigned char *instr_buf, void *tgt_addr,
         char *buffer, unsigned buflen, unsigned options );



extern int xthal_disassemble_size( unsigned char *instr_buf );






extern void* xthal_memcpy(void *dst, const void *src, unsigned len);
extern void* xthal_bcopy(const void *src, void *dst, unsigned len);






extern int xthal_compare_and_set( int *addr, int test_val, int compare_val );
# 403 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h"
extern const unsigned int Xthal_release_major;
extern const unsigned int Xthal_release_minor;
extern const char * const Xthal_release_name;
extern const char * const Xthal_release_internal;

extern const unsigned char Xthal_memory_order;
extern const unsigned char Xthal_have_windowed;
extern const unsigned char Xthal_have_density;
extern const unsigned char Xthal_have_booleans;
extern const unsigned char Xthal_have_loops;
extern const unsigned char Xthal_have_nsa;
extern const unsigned char Xthal_have_minmax;
extern const unsigned char Xthal_have_sext;
extern const unsigned char Xthal_have_clamps;
extern const unsigned char Xthal_have_mac16;
extern const unsigned char Xthal_have_mul16;
extern const unsigned char Xthal_have_fp;
extern const unsigned char Xthal_have_speculation;
extern const unsigned char Xthal_have_threadptr;

extern const unsigned char Xthal_have_pif;
extern const unsigned short Xthal_num_writebuffer_entries;

extern const unsigned int Xthal_build_unique_id;

extern const unsigned int Xthal_hw_configid0;
extern const unsigned int Xthal_hw_configid1;
extern const unsigned int Xthal_hw_release_major;
extern const unsigned int Xthal_hw_release_minor;
extern const char * const Xthal_hw_release_name;
extern const char * const Xthal_hw_release_internal;


extern void xthal_clear_regcached_code( void );
# 653 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h"
extern void xthal_window_spill( void );







extern void xthal_validate_cp(int);
extern void xthal_invalidate_cp(int);


extern void xthal_set_cpenable(unsigned);
extern unsigned xthal_get_cpenable(void);







extern const unsigned char Xthal_num_intlevels;

extern const unsigned char Xthal_num_interrupts;

extern const unsigned char Xthal_excm_level;


extern const unsigned int Xthal_intlevel_mask[16];

extern const unsigned int Xthal_intlevel_andbelow_mask[16];


extern const unsigned char Xthal_intlevel[32];


extern const unsigned char Xthal_inttype[32];


extern const unsigned int Xthal_inttype_mask[8];


extern const int Xthal_timer_interrupt[4];


extern unsigned xthal_get_intenable( void );
extern void xthal_set_intenable( unsigned );
extern unsigned xthal_get_interrupt( void );

extern void xthal_set_intset( unsigned );
extern void xthal_set_intclear( unsigned );







extern const int Xthal_num_ibreak;
extern const int Xthal_num_dbreak;







extern const unsigned char Xthal_have_ccount;
extern const unsigned char Xthal_num_ccompare;


extern unsigned xthal_get_ccount(void);


extern void xthal_set_ccompare(int, unsigned);
extern unsigned xthal_get_ccompare(int);






extern const unsigned char Xthal_have_prid;
extern const unsigned char Xthal_have_exceptions;
extern const unsigned char Xthal_xea_version;
extern const unsigned char Xthal_have_interrupts;
extern const unsigned char Xthal_have_highlevel_interrupts;
extern const unsigned char Xthal_have_nmi;

extern unsigned xthal_get_prid( void );







extern unsigned xthal_vpri_to_intlevel(unsigned vpri);
extern unsigned xthal_intlevel_to_vpri(unsigned intlevel);


extern unsigned xthal_int_enable(unsigned);
extern unsigned xthal_int_disable(unsigned);


extern int xthal_set_int_vpri(int intnum, int vpri);
extern int xthal_get_int_vpri(int intnum);


extern void xthal_set_vpri_locklevel(unsigned intlevel);
extern unsigned xthal_get_vpri_locklevel(void);


extern unsigned xthal_set_vpri(unsigned vpri);
extern unsigned xthal_get_vpri(void);
extern unsigned xthal_set_vpri_intlevel(unsigned intlevel);
extern unsigned xthal_set_vpri_lock(void);






typedef void (XtHalVoidFunc)(void);


extern unsigned Xthal_tram_pending;
# 789 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h"
extern unsigned Xthal_tram_enabled;


extern unsigned Xthal_tram_sync;


extern unsigned xthal_tram_pending_to_service( void );
extern void xthal_tram_done( unsigned serviced_mask );
extern int xthal_tram_set_sync( int intnum, int sync );
extern XtHalVoidFunc* xthal_set_tram_trigger_func( XtHalVoidFunc *trigger_fn );






extern const unsigned char Xthal_num_instrom;
extern const unsigned char Xthal_num_instram;
extern const unsigned char Xthal_num_datarom;
extern const unsigned char Xthal_num_dataram;
extern const unsigned char Xthal_num_xlmi;



extern const unsigned int Xthal_instrom_vaddr[];
extern const unsigned int Xthal_instrom_paddr[];
extern const unsigned int Xthal_instrom_size [];
extern const unsigned int Xthal_instram_vaddr[];
extern const unsigned int Xthal_instram_paddr[];
extern const unsigned int Xthal_instram_size [];
extern const unsigned int Xthal_datarom_vaddr[];
extern const unsigned int Xthal_datarom_paddr[];
extern const unsigned int Xthal_datarom_size [];
extern const unsigned int Xthal_dataram_vaddr[];
extern const unsigned int Xthal_dataram_paddr[];
extern const unsigned int Xthal_dataram_size [];
extern const unsigned int Xthal_xlmi_vaddr[];
extern const unsigned int Xthal_xlmi_paddr[];
extern const unsigned int Xthal_xlmi_size [];







extern const unsigned char Xthal_icache_setwidth;
extern const unsigned char Xthal_dcache_setwidth;

extern const unsigned int Xthal_icache_ways;
extern const unsigned int Xthal_dcache_ways;

extern const unsigned char Xthal_icache_line_lockable;
extern const unsigned char Xthal_dcache_line_lockable;


extern unsigned xthal_get_cacheattr( void );
extern unsigned xthal_get_icacheattr( void );
extern unsigned xthal_get_dcacheattr( void );
extern void xthal_set_cacheattr( unsigned );
extern void xthal_set_icacheattr( unsigned );
extern void xthal_set_dcacheattr( unsigned );

extern int xthal_set_region_attribute( void *addr, unsigned size,
         unsigned cattr, unsigned flags );
# 862 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h"
extern void xthal_icache_enable( void );
extern void xthal_dcache_enable( void );

extern void xthal_icache_disable( void );
extern void xthal_dcache_disable( void );


extern void xthal_icache_all_invalidate( void );
extern void xthal_dcache_all_invalidate( void );

extern void xthal_dcache_all_writeback( void );

extern void xthal_dcache_all_writeback_inv( void );

extern void xthal_icache_region_lock( void *addr, unsigned size );
extern void xthal_dcache_region_lock( void *addr, unsigned size );

extern void xthal_icache_line_lock(void *addr);
extern void xthal_dcache_line_lock(void *addr);


extern void xthal_icache_all_unlock( void );
extern void xthal_dcache_all_unlock( void );
extern void xthal_icache_region_unlock( void *addr, unsigned size );
extern void xthal_dcache_region_unlock( void *addr, unsigned size );

extern void xthal_icache_line_unlock(void *addr);
extern void xthal_dcache_line_unlock(void *addr);
# 899 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h"
extern void xthal_memep_inject_error(void *addr, int size, int flags);







extern const unsigned char Xthal_have_spanning_way;
extern const unsigned char Xthal_have_identity_map;
extern const unsigned char Xthal_have_mimic_cacheattr;
extern const unsigned char Xthal_have_xlt_cacheattr;
extern const unsigned char Xthal_have_cacheattr;
extern const unsigned char Xthal_have_tlbs;

extern const unsigned char Xthal_mmu_asid_bits;
extern const unsigned char Xthal_mmu_asid_kernel;
extern const unsigned char Xthal_mmu_rings;
extern const unsigned char Xthal_mmu_ring_bits;
extern const unsigned char Xthal_mmu_sr_bits;
extern const unsigned char Xthal_mmu_ca_bits;
extern const unsigned int Xthal_mmu_max_pte_page_size;
extern const unsigned int Xthal_mmu_min_pte_page_size;

extern const unsigned char Xthal_itlb_way_bits;
extern const unsigned char Xthal_itlb_ways;
extern const unsigned char Xthal_itlb_arf_ways;
extern const unsigned char Xthal_dtlb_way_bits;
extern const unsigned char Xthal_dtlb_ways;
extern const unsigned char Xthal_dtlb_arf_ways;



extern int xthal_static_v2p( unsigned vaddr, unsigned *paddrp );
extern int xthal_static_p2v( unsigned paddr, unsigned *vaddrp, unsigned cached );
# 948 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/hal.h"
extern int xthal_set_region_translation(void* vaddr, void* paddr, unsigned size, unsigned cache_atr, unsigned flags);
extern int xthal_v2p(void*, void**, unsigned*, unsigned*);
extern int xthal_invalidate_region(void* addr);
extern int xthal_set_region_translation_raw(void *vaddr, void *paddr, unsigned cattr);
# 41 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_config.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/core.h" 1
# 42 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/core.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtensa-versions.h" 1
# 43 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/core.h" 2
# 51 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/core.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/core-matmap.h" 1
# 52 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/core.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/tie.h" 1
# 53 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/core.h" 2
# 1279 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/core.h"
extern const unsigned char Xthal_cp_id_FPU;
extern const unsigned int Xthal_cp_mask_FPU;


extern const unsigned char Xthal_cp_id_XCHAL_CP1_IDENT;
extern const unsigned int Xthal_cp_mask_XCHAL_CP1_IDENT;


extern const unsigned char Xthal_cp_id_XCHAL_CP2_IDENT;
extern const unsigned int Xthal_cp_mask_XCHAL_CP2_IDENT;


extern const unsigned char Xthal_cp_id_XCHAL_CP3_IDENT;
extern const unsigned int Xthal_cp_mask_XCHAL_CP3_IDENT;


extern const unsigned char Xthal_cp_id_XCHAL_CP4_IDENT;
extern const unsigned int Xthal_cp_mask_XCHAL_CP4_IDENT;


extern const unsigned char Xthal_cp_id_XCHAL_CP5_IDENT;
extern const unsigned int Xthal_cp_mask_XCHAL_CP5_IDENT;


extern const unsigned char Xthal_cp_id_XCHAL_CP6_IDENT;
extern const unsigned int Xthal_cp_mask_XCHAL_CP6_IDENT;


extern const unsigned char Xthal_cp_id_XCHAL_CP7_IDENT;
extern const unsigned int Xthal_cp_mask_XCHAL_CP7_IDENT;
# 42 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_config.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/system.h" 1
# 43 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_config.h" 2

# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_context.h" 1
# 45 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_context.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/corebits.h" 1
# 46 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_context.h" 2

# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime-frames.h" 1
# 56 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime-frames.h"
typedef struct {
long pc;
long ps;
long areg[4];
long sar;

long lcount;
long lbeg;
long lend;


long acclo;
long acchi;
long mr[4];

} KernelFrame;
# 80 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime-frames.h"
typedef struct {
long pc;
long ps;
long sar;
long vpri;



long a2;
long a3;
long a4;
long a5;
# 104 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime-frames.h"
long exccause;

long lcount;
long lbeg;
long lend;


long acclo;
long acchi;
long mr[4];
# 123 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime-frames.h"
long pad[((3 + 1*1 + 1*2 + 0*1) & 3)];


} UserFrame;
# 48 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_context.h" 2
# 103 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_context.h"
typedef struct {
long exit;
long pc;
long ps;
long a0;
long a1;
long a2;
long a3;
long a4;
long a5;
long a6;
long a7;
long a8;
long a9;
long a10;
long a11;
long a12;
long a13;
long a14;
long a15;
long sar;
long exccause;
long excvaddr;

long lbeg;
long lend;
long lcount;



long tmp0;
long tmp1;
long tmp2;
# 145 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_context.h"
} XtExcFrame;
# 202 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_context.h"
typedef struct {
# 213 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_context.h"
long exit;
long pc;
long ps;
long next;
long a0;
long a1;
long a2;
long a3;

} XtSolFrame;
# 45 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_config.h" 2
# 103 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOSConfig.h" 2




# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdlib.h" 1
# 10 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdlib.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/machine/ieeefp.h" 1
# 11 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdlib.h" 2





# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 1 3 4
# 17 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdlib.h" 2



# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/machine/stdlib.h" 1
# 21 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdlib.h" 2

# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/alloca.h" 1
# 23 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdlib.h" 2








typedef struct
{
  int quot;
  int rem;
} div_t;

typedef struct
{
  long quot;
  long rem;
} ldiv_t;




typedef struct
{
  long long int quot;
  long long int rem;
} lldiv_t;




typedef int (*__compar_fn_t) (const void *, const void *);
# 67 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdlib.h"
int __locale_mb_cur_max (void);



void abort (void) __attribute__ ((__noreturn__));
int abs (int);
int atexit (void (*__func)(void));
double atof (const char *__nptr);

float atoff (const char *__nptr);

int atoi (const char *__nptr);
int _atoi_r (struct _reent *, const char *__nptr);
long atol (const char *__nptr);
long _atol_r (struct _reent *, const char *__nptr);
void * bsearch (const void * __key, const void * __base, size_t __nmemb, size_t __size, __compar_fn_t _compar)



                                ;
void * calloc (size_t __nmemb, size_t __size) ;
div_t div (int __numer, int __denom);
void exit (int __status) __attribute__ ((__noreturn__));
void free (void *) ;
char * getenv (const char *__string);
char * _getenv_r (struct _reent *, const char *__string);
char * _findenv (const char *, int *);
char * _findenv_r (struct _reent *, const char *, int *);

extern char *suboptarg;
int getsubopt (char **, char * const *, char **);

long labs (long);
ldiv_t ldiv (long __numer, long __denom);
void * malloc (size_t __size) ;
int mblen (const char *, size_t);
int _mblen_r (struct _reent *, const char *, size_t, _mbstate_t *);
int mbtowc (wchar_t *restrict, const char *restrict, size_t);
int _mbtowc_r (struct _reent *, wchar_t *restrict, const char *restrict, size_t, _mbstate_t *);
int wctomb (char *, wchar_t);
int _wctomb_r (struct _reent *, char *, wchar_t, _mbstate_t *);
size_t mbstowcs (wchar_t *restrict, const char *restrict, size_t);
size_t _mbstowcs_r (struct _reent *, wchar_t *restrict, const char *restrict, size_t, _mbstate_t *);
size_t wcstombs (char *restrict, const wchar_t *restrict, size_t);
size_t _wcstombs_r (struct _reent *, char *restrict, const wchar_t *restrict, size_t, _mbstate_t *);


char * mkdtemp (char *);
int mkostemp (char *, int);
int mkostemps (char *, int, int);
int mkstemp (char *);
int mkstemps (char *, int);

char * mktemp (char *);




char * _mkdtemp_r (struct _reent *, char *);
int _mkostemp_r (struct _reent *, char *, int);
int _mkostemps_r (struct _reent *, char *, int, int);
int _mkstemp_r (struct _reent *, char *);
int _mkstemps_r (struct _reent *, char *, int);

char * _mktemp_r (struct _reent *, char *);




void qsort (void * __base, size_t __nmemb, size_t __size, __compar_fn_t _compar);
int rand (void);
void * realloc (void * __r, size_t __size) ;

void * reallocf (void * __r, size_t __size);
char * realpath (const char *restrict path, char *restrict resolved_path);

void srand (unsigned __seed);
double strtod (const char *restrict __n, char **restrict __end_PTR);
double _strtod_r (struct _reent *,const char *restrict __n, char **restrict __end_PTR);



float strtof (const char *restrict __n, char **restrict __end_PTR);







long strtol (const char *restrict __n, char **restrict __end_PTR, int __base);
long _strtol_r (struct _reent *,const char *restrict __n, char **restrict __end_PTR, int __base);
unsigned long strtoul (const char *restrict __n, char **restrict __end_PTR, int __base);
unsigned long _strtoul_r (struct _reent *,const char *restrict __n, char **restrict __end_PTR, int __base);

int system (const char *__string);


long a64l (const char *__input);
char * l64a (long __input);
char * _l64a_r (struct _reent *,long __input);
int on_exit (void (*__func)(int, void *),void * __arg);




void _Exit (int __status) __attribute__ ((__noreturn__));


int putenv (char *__string);
int _putenv_r (struct _reent *, char *__string);
void * _reallocf_r (struct _reent *, void *, size_t);
int setenv (const char *__string, const char *__value, int __overwrite);
int _setenv_r (struct _reent *, const char *__string, const char *__value, int __overwrite);

char * gcvt (double,int,char *);
char * gcvtf (float,int,char *);
char * fcvt (double,int,int *,int *);
char * fcvtf (float,int,int *,int *);
char * ecvt (double,int,int *,int *);
char * ecvtbuf (double, int, int*, int*, char *);
char * fcvtbuf (double, int, int*, int*, char *);
char * ecvtf (float,int,int *,int *);
char * dtoa (double, int, int, int *, int*, char**);

char * __itoa (int, char *, int);
char * __utoa (unsigned, char *, int);

char * itoa (int, char *, int);
char * utoa (unsigned, char *, int);
int rand_r (unsigned *__seed);

double drand48 (void);
double _drand48_r (struct _reent *);
double erand48 (unsigned short [3]);
double _erand48_r (struct _reent *, unsigned short [3]);
long jrand48 (unsigned short [3]);
long _jrand48_r (struct _reent *, unsigned short [3]);
void lcong48 (unsigned short [7]);
void _lcong48_r (struct _reent *, unsigned short [7]);
long lrand48 (void);
long _lrand48_r (struct _reent *);
long mrand48 (void);
long _mrand48_r (struct _reent *);
long nrand48 (unsigned short [3]);
long _nrand48_r (struct _reent *, unsigned short [3]);
unsigned short *
       seed48 (unsigned short [3]);
unsigned short *
       _seed48_r (struct _reent *, unsigned short [3]);
void srand48 (long);
void _srand48_r (struct _reent *, long);




long long atoll (const char *__nptr);


long long _atoll_r (struct _reent *, const char *__nptr);




long long llabs (long long);
lldiv_t lldiv (long long __numer, long long __denom);
long long strtoll (const char *restrict __n, char **restrict __end_PTR, int __base);


long long _strtoll_r (struct _reent *, const char *restrict __n, char **restrict __end_PTR, int __base);




unsigned long long strtoull (const char *restrict __n, char **restrict __end_PTR, int __base);


unsigned long long _strtoull_r (struct _reent *, const char *restrict __n, char **restrict __end_PTR, int __base);


void cfree (void *);
int unsetenv (const char *__string);
int _unsetenv_r (struct _reent *, const char *__string);
# 258 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdlib.h"
char * _dtoa_r (struct _reent *, double, int, int, int *, int*, char**);

void * _malloc_r (struct _reent *, size_t) ;
void * _calloc_r (struct _reent *, size_t, size_t) ;
void _free_r (struct _reent *, void *) ;
void * _realloc_r (struct _reent *, void *, size_t) ;
void _mstats_r (struct _reent *, char *);

int _system_r (struct _reent *, const char *);

void __eprintf (const char *, const char *, unsigned int, const char *);
# 291 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/stdlib.h"
extern long double strtold (const char *restrict, char **restrict);




# 108 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOSConfig.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h" 1
# 19 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stdbool.h" 1 3 4
# 20 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h" 2

# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/soc.h" 1
# 20 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/soc.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_assert.h" 1
# 17 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_assert.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/assert.h" 1
# 39 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/assert.h"
void __assert (const char *, int, const char *) __attribute__ ((__noreturn__))
                                 ;
void __assert_func (const char *, int, const char *, const char *) __attribute__ ((__noreturn__))
                                 ;
# 18 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_assert.h" 2
# 21 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/soc.h" 2
# 22 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h" 2
# 54 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
typedef enum {
    ETS_OK = 0,
    ETS_FAILED = 1
} ETS_STATUS;

typedef uint32_t ETSSignal;
typedef uint32_t ETSParam;

typedef struct ETSEventTag ETSEvent;

struct ETSEventTag {
    ETSSignal sig;
    ETSParam par;
};

typedef void (*ETSTask)(ETSEvent *e);
typedef void (* ets_idle_cb_t)(void *arg);
# 79 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_run(void);
# 90 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_set_idle_cb(ets_idle_cb_t func, void *arg);
# 105 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_task(ETSTask task, uint8_t prio, ETSEvent *queue, uint8_t qlen);
# 119 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
ETS_STATUS ets_post(uint8_t prio, ETSSignal sig, ETSParam par);
# 133 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
extern const char *const exc_cause_table[40];
# 143 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_set_user_start(uint32_t start);
# 153 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_set_startup_callback(uint32_t callback);
# 163 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_set_appcpu_boot_addr(uint32_t start);
# 179 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
ETS_STATUS ets_unpack_flash_code_legacy(uint32_t pos, uint32_t *entry_addr, 
# 179 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h" 3 4
                                                                           _Bool 
# 179 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
                                                                                jump, 
# 179 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h" 3 4
                                                                                      _Bool 
# 179 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
                                                                                           config);
# 197 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
ETS_STATUS ets_unpack_flash_code(uint32_t pos, uint32_t *entry_addr, 
# 197 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h" 3 4
                                                                    _Bool 
# 197 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
                                                                         jump, 
# 197 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h" 3 4
                                                                               _Bool 
# 197 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
                                                                                    sb_need_check, 
# 197 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h" 3 4
                                                                                                   _Bool 
# 197 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
                                                                                                        config);
# 222 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
int ets_printf(const char *fmt, ...);
# 232 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_write_char_uart(char c);
# 242 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_install_putc1(void (*p)(char c));
# 252 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_install_putc2(void (*p)(char c));
# 262 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_install_uart_printf(void);
# 284 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
typedef void ETSTimerFunc(void *timer_arg);

typedef struct _ETSTIMER_ {
    struct _ETSTIMER_ *timer_next;
    uint32_t timer_expire;
    uint32_t timer_period;
    ETSTimerFunc *timer_func;
    void *timer_arg;
} ETSTimer;
# 302 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_timer_init(void);
# 316 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_timer_arm(ETSTimer *timer, uint32_t tmout, 
# 316 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h" 3 4
                                                   _Bool 
# 316 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
                                                        repeat);
# 330 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_timer_arm_us(ETSTimer *ptimer, uint32_t us, 
# 330 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h" 3 4
                                                    _Bool 
# 330 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
                                                         repeat);
# 340 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_timer_disarm(ETSTimer *timer);
# 354 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_timer_setfn(ETSTimer *ptimer, ETSTimerFunc *pfunction, void *parg);
# 364 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_timer_done(ETSTimer *ptimer);
# 374 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_delay_us(uint32_t us);
# 384 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_update_cpu_frequency(uint32_t ticks_per_us);
# 396 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_update_cpu_frequency_rom(uint32_t ticks_per_us);
# 406 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
uint32_t ets_get_cpu_frequency(void);
# 415 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
uint32_t ets_get_xtal_scale(void);
# 428 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
uint32_t ets_get_detected_xtal_freq(void);
# 442 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
typedef void (* ets_isr_t)(void *);
# 457 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_isr_attach(int i, ets_isr_t func, void *arg);
# 468 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_isr_mask(uint32_t mask);
# 479 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_isr_unmask(uint32_t unmask);
# 490 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_intr_lock(void);
# 501 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_intr_unlock(void);
# 512 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void ets_waiti0(void);
# 530 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
void intr_matrix_set(int cpu_no, uint32_t model_num, uint32_t intr_num);
# 620 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h"
typedef enum {
    OK = 0,
    FAIL,
    PENDING,
    BUSY,
    CANCEL,
} STATUS;
# 109 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOSConfig.h" 2
# 255 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOSConfig.h"
extern void vPortCleanUpTCB ( void *pxTCB );
# 100 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOS.h" 2


# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/projdefs.h" 1
# 77 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/projdefs.h"
typedef void (*TaskFunction_t)( void * );
# 103 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOS.h" 2


# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portable.h" 1
# 87 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portable.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/deprecated_definitions.h" 1
# 88 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portable.h" 2






# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h" 1
# 77 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/tie/xt_core.h" 1
# 78 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h" 2



# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime.h" 1
# 30 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/config/specreg.h" 1
# 31 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime-core-state.h" 1
# 44 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime-core-state.h"
typedef struct {
long signature;
long restore_label;
long aftersave_label;
long areg[64];

long caller_regs[16];
long caller_regs_saved;





long windowbase;
long windowstart;

long sar;

long epc1;
long ps;
long excsave1;

long depc;



long epc[6 + 1 - 1];
long eps[6 + 1 - 1];
long excsave[6 + 1 - 1];


long lcount;
long lbeg;
long lend;





long vecbase;


long atomctl;





long memctl;


long ccount;
long ccompare[3];


long intenable;
long interrupt;


long icount;
long icountlevel;
long debugcause;


long dbreakc[2];
long dbreaka[2];


long ibreaka[2];
long ibreakenable;



long misc[4];
# 131 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime-core-state.h"
long cpenable;




long tlbs[8*2];
# 163 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime-core-state.h"
char ncp[48] __attribute__((aligned(4)));

char cp0[72] __attribute__((aligned(4)));
char cp1[0] __attribute__((aligned(1)));
char cp2[0] __attribute__((aligned(1)));
char cp3[0] __attribute__((aligned(1)));
char cp4[0] __attribute__((aligned(1)));
char cp5[0] __attribute__((aligned(1)));
char cp6[0] __attribute__((aligned(1)));
char cp7[0] __attribute__((aligned(1)));
# 183 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime-core-state.h"
} XtosCoreState;
# 32 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime.h" 2
# 61 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime.h"
typedef void (_xtos_handler_func)();

typedef _xtos_handler_func *_xtos_handler;
# 151 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime.h"
extern unsigned int _xtos_ints_off( unsigned int mask );
extern unsigned int _xtos_ints_on( unsigned int mask );
extern unsigned _xtos_set_intlevel( int intlevel );
extern unsigned _xtos_set_min_intlevel( int intlevel );
extern unsigned _xtos_restore_intlevel( unsigned restoreval );
extern unsigned _xtos_restore_just_intlevel( unsigned restoreval );
extern _xtos_handler _xtos_set_interrupt_handler( int n, _xtos_handler f );
extern _xtos_handler _xtos_set_interrupt_handler_arg( int n, _xtos_handler f, void *arg );
extern _xtos_handler _xtos_set_exception_handler( int n, _xtos_handler f );

extern void _xtos_memep_initrams( void );
extern void _xtos_memep_enable( int flags );



extern void _xtos_dispatch_level1_interrupts( void );


extern void _xtos_dispatch_level2_interrupts( void );


extern void _xtos_dispatch_level3_interrupts( void );


extern void _xtos_dispatch_level4_interrupts( void );


extern void _xtos_dispatch_level5_interrupts( void );


extern void _xtos_dispatch_level6_interrupts( void );



extern unsigned int _xtos_read_ints( void );
extern void _xtos_clear_ints( unsigned int mask );



extern int _xtos_core_shutoff(unsigned flags);
extern int _xtos_core_save(unsigned flags, XtosCoreState *savearea, void *code);
extern void _xtos_core_restore(unsigned retvalue, XtosCoreState *savearea);
# 202 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/xtensa/xtruntime.h"
extern void _xtos_timer_0_delta( int cycles );


extern void _xtos_timer_1_delta( int cycles );


extern void _xtos_timer_2_delta( int cycles );
# 82 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_crosscore_int.h" 1
# 27 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_crosscore_int.h"
void esp_crosscore_int_init();
# 40 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_crosscore_int.h"
void esp_crosscore_int_send_yield(int coreId);
# 83 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h" 2


# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h" 1
# 41 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h"
void heap_alloc_caps_init();
# 51 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h"
void heap_alloc_enable_nonos_stack_tag();
# 62 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h"
void *pvPortMallocCaps(size_t xWantedSize, uint32_t caps);
# 75 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h"
size_t xPortGetFreeHeapSizeCaps( uint32_t caps );
# 88 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h"
size_t xPortGetMinimumEverFreeHeapSizeCaps( uint32_t caps );
# 102 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h"

# 102 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h" 3 4
_Bool 
# 102 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h"
    esp32_ptr_has_memory_caps(void *ptr, int caps);
# 112 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h"
static inline 
# 112 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h" 3 4
             _Bool 
# 112 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_heap_alloc_caps.h"
                   esp_ptr_dma_capable( const void *ptr )
{
    return ( (int)ptr >= 0x3FFAE000 && (int)ptr < 0x40000000 );
}
# 86 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h" 2
# 111 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h"
typedef uint8_t StackType_t;
typedef int BaseType_t;
typedef unsigned int UBaseType_t;





 typedef uint32_t TickType_t;





# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portbenchmark.h" 1
# 126 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h" 2

# 1 "./sdkconfig.h" 1
# 128 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h" 2




typedef struct {
 volatile uint32_t mux;




} portMUX_TYPE;
# 177 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h"
void vPortAssertIfInISR();
# 202 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h"
void vPortCPUInitializeMutex(portMUX_TYPE *mux);
# 213 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h"
void vTaskExitCritical( portMUX_TYPE *mux );
void vTaskEnterCritical( portMUX_TYPE *mux );
void vPortCPUAcquireMutex(portMUX_TYPE *mux);
int vPortCPUReleaseMutex(portMUX_TYPE *mux);
# 226 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h"
static inline unsigned portENTER_CRITICAL_NESTED() { unsigned state = ({ unsigned __tmp; __asm__ __volatile__( "rsil	%0, " "3" "\n" : "=a" (__tmp) : : "memory" ); __tmp;}); ; return state; }
# 247 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h"
static inline void uxPortCompareSet(volatile uint32_t *addr, uint32_t compare, uint32_t *set) {
    __asm__ __volatile__(
        "WSR 	    %2,SCOMPARE1 \n"
        "ISYNC      \n"
        "S32C1I     %0, %1, 0	 \n"
        :"=r"(*set)
        :"r"(addr), "r"(compare), "0"(*set)
        );
}
# 271 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h"
void vPortYield( void );
void _frxt_setup_switch( void );



static inline uint32_t xPortGetCoreID();
# 297 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h"
typedef struct {

 volatile StackType_t* coproc_area;
# 314 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h"
} xMPU_SETTINGS;
# 326 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portmacro.h"
void _xt_coproc_release(void * coproc_sa_base);
# 95 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portable.h" 2
# 125 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portable.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/mpu_wrappers.h" 1
# 126 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portable.h" 2
# 134 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portable.h"
 StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters, BaseType_t xRunPrivileged ) ;





typedef struct HeapRegion
{
 uint8_t *pucStartAddress;
 size_t xSizeInBytes;
} HeapRegion_t;
# 157 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portable.h"
void vPortDefineHeapRegions( const HeapRegion_t * const pxHeapRegions );





void *pvPortMalloc( size_t xSize ) ;
void vPortFree( void *pv ) ;
void vPortInitialiseBlocks( void ) ;
size_t xPortGetFreeHeapSize( void ) ;
size_t xPortGetMinimumEverFreeHeapSize( void ) ;





BaseType_t xPortStartScheduler( void ) ;






void vPortEndScheduler( void ) ;







void vPortYieldOtherCore( BaseType_t coreid) ;






void vPortSetStackWatchpoint( void* pxStackStart );





BaseType_t xPortInIsrContext();
# 211 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/portable.h"
 struct xMEMORY_REGION;
 void vPortStoreTaskMPUSettings( xMPU_SETTINGS *xMPUSettings, const struct xMEMORY_REGION * const xRegions, StackType_t *pxBottomOfStack, uint32_t usStackDepth ) ;
 void vPortReleaseTaskMPUSettings( xMPU_SETTINGS *xMPUSettings );



static inline uint32_t xPortGetCoreID() {
    int id;
    asm volatile(
        "rsr.prid %0\n"
        " extui %0,%0,13,1"
        :"=r"(id));
    return id;
}


uint32_t xPortGetTickRateHz(void);
# 106 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOS.h" 2
# 819 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOS.h"
struct xSTATIC_LIST_ITEM
{
 TickType_t xDummy1;
 void *pvDummy2[ 4 ];
};
typedef struct xSTATIC_LIST_ITEM StaticListItem_t;


struct xSTATIC_MINI_LIST_ITEM
{
 TickType_t xDummy1;
 void *pvDummy2[ 2 ];
};
typedef struct xSTATIC_MINI_LIST_ITEM StaticMiniListItem_t;


typedef struct xSTATIC_LIST
{
 UBaseType_t uxDummy1;
 void *pvDummy2;
 StaticMiniListItem_t xDummy3;
} StaticList_t;
# 855 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOS.h"
typedef struct xSTATIC_TCB
{
 void *pxDummy1;

  xMPU_SETTINGS xDummy2;

 StaticListItem_t xDummy3[ 2 ];
 UBaseType_t uxDummy5;
 void *pxDummy6;
 uint8_t ucDummy7[ ( 16 ) ];
    UBaseType_t uxDummyCoreId;




  UBaseType_t uxDummy9;
        uint32_t OldInterruptState;





  UBaseType_t uxDummy12[ 2 ];





  void *pvDummy15[ 4 ];

  void *pvDummyLocalStorageCallBack[ 4 ];






  struct _reent xDummy17;


  uint32_t ulDummy18;
  uint32_t ucDummy19;



  uint8_t uxDummy20;


} StaticTask_t;
# 919 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/FreeRTOS.h"
typedef struct xSTATIC_QUEUE
{
 void *pvDummy1[ 3 ];

 union
 {
  void *pvDummy2;
  UBaseType_t uxDummy2;
 } u;

 StaticList_t xDummy3[ 2 ];
 UBaseType_t uxDummy4[ 3 ];


  uint8_t ucDummy6;



  void *pvDummy7;







    struct {
     volatile uint32_t ucDummy10;




    } sDummy12;

} StaticQueue_t;
typedef StaticQueue_t StaticSemaphore_t;
# 35 "modmachine.c" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h" 1
# 78 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/limits.h" 1
# 131 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/limits.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include-fixed/limits.h" 1 3 4
# 132 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/limits.h" 2
# 79 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h" 2

# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/list.h" 1
# 181 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/list.h"
struct xLIST_ITEM
{

 TickType_t xItemValue;
 struct xLIST_ITEM * pxNext;
 struct xLIST_ITEM * pxPrevious;
 void * pvOwner;
 void * pvContainer;

};
typedef struct xLIST_ITEM ListItem_t;


_Static_assert(sizeof(StaticListItem_t) == sizeof(ListItem_t), "StaticListItem_t != ListItem_t");


struct xMINI_LIST_ITEM
{

 TickType_t xItemValue;
 struct xLIST_ITEM * pxNext;
 struct xLIST_ITEM * pxPrevious;
};
typedef struct xMINI_LIST_ITEM MiniListItem_t;


_Static_assert(sizeof(StaticMiniListItem_t) == sizeof(MiniListItem_t), "StaticMiniListItem_t != MiniListItem_t");






typedef struct xLIST
{

 UBaseType_t uxNumberOfItems;
 ListItem_t * pxIndex;
 MiniListItem_t xListEnd;

} List_t;


_Static_assert(sizeof(StaticList_t) == sizeof(List_t), "StaticList_t != List_t");
# 399 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/list.h"
void vListInitialise( List_t * const pxList );
# 410 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/list.h"
void vListInitialiseItem( ListItem_t * const pxItem );
# 423 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/list.h"
void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem );
# 444 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/list.h"
void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem );
# 459 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/list.h"
UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove );
# 81 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h" 2
# 108 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
typedef void * TaskHandle_t;





typedef BaseType_t (*TaskHookFunction_t)( void * );


typedef enum
{
 eRunning = 0,
 eReady,
 eBlocked,
 eSuspended,
 eDeleted
} eTaskState;


typedef enum
{
 eNoAction = 0,
 eSetBits,
 eIncrement,
 eSetValueWithOverwrite,
 eSetValueWithoutOverwrite
} eNotifyAction;




typedef struct xTIME_OUT
{
 BaseType_t xOverflowCount;
 TickType_t xTimeOnEntering;
} TimeOut_t;




typedef struct xMEMORY_REGION
{
 void *pvBaseAddress;
 uint32_t ulLengthInBytes;
 uint32_t ulParameters;
} MemoryRegion_t;




typedef struct xTASK_PARAMETERS
{
 TaskFunction_t pvTaskCode;
 const char * const pcName;
 uint32_t usStackDepth;
 void *pvParameters;
 UBaseType_t uxPriority;
 StackType_t *puxStackBuffer;
 MemoryRegion_t xRegions[ 1 ];
} TaskParameters_t;



typedef struct xTASK_STATUS
{
 TaskHandle_t xHandle;
 const char *pcTaskName;
 UBaseType_t xTaskNumber;
 eTaskState eCurrentState;
 UBaseType_t uxCurrentPriority;
 UBaseType_t uxBasePriority;
 uint32_t ulRunTimeCounter;
 StackType_t *pxStackBase;
 uint32_t usStackHighWaterMark;
} TaskStatus_t;





typedef struct xTASK_SNAPSHOT
{
    void *pxTCB;
    StackType_t *pxTopOfStack;
    StackType_t *pxEndOfStack;

} TaskSnapshot_t;


typedef enum
{
 eAbortSleep = 0,
 eStandardSleep,
 eNoTasksWaitingTimeout
} eSleepModeStatus;
# 378 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
    BaseType_t xTaskCreatePinnedToCore( TaskFunction_t pxTaskCode,
                   const char * const pcName,
                   const uint32_t usStackDepth,
                   void * const pvParameters,
                   UBaseType_t uxPriority,
                   TaskHandle_t * const pxCreatedTask,
                   const BaseType_t xCoreID);
# 499 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
 TaskHandle_t xTaskCreateStaticPinnedToCore( TaskFunction_t pxTaskCode,
                     const char * const pcName,
                     const uint32_t ulStackDepth,
                     void * const pvParameters,
                     UBaseType_t uxPriority,
                     StackType_t * const puxStackBuffer,
                     StaticTask_t * const pxTaskBuffer,
                                                const BaseType_t xCoreID );
# 579 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
 BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *pxCreatedTask ) ;
# 628 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const pxRegions ) ;
# 669 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskDelete( TaskHandle_t xTaskToDelete ) ;
# 721 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskDelay( const TickType_t xTicksToDelay ) ;
# 780 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement ) ;
# 827 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask ) ;







UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask ) ;
# 853 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
eTaskState eTaskGetState( TaskHandle_t xTask ) ;
# 895 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority ) ;
# 946 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskSuspend( TaskHandle_t xTaskToSuspend ) ;
# 995 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskResume( TaskHandle_t xTaskToResume ) ;
# 1024 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume ) ;
# 1057 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskStartScheduler( void ) ;
# 1113 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskEndScheduler( void ) ;
# 1164 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskSuspendAll( void ) ;
# 1218 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
BaseType_t xTaskResumeAll( void ) ;
# 1233 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
TickType_t xTaskGetTickCount( void ) ;
# 1249 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
TickType_t xTaskGetTickCountFromISR( void ) ;
# 1263 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
UBaseType_t uxTaskGetNumberOfTasks( void ) ;
# 1277 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
char *pcTaskGetTaskName( TaskHandle_t xTaskToQuery ) ;
# 1298 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask ) ;
# 1334 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
 void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue ) ;
 void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex ) ;


  typedef void (*TlsDeleteCallbackFunction_t)( int, void * );
  void vTaskSetThreadLocalStoragePointerAndDelCallback( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue , TlsDeleteCallbackFunction_t xDelCallback);
# 1355 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter ) ;
# 1364 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
TaskHandle_t xTaskGetIdleTaskHandle( void );
# 1463 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArraySize, uint32_t * const pulTotalRunTime );
# 1510 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskList( char * pcWriteBuffer ) ;
# 1564 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskGetRunTimeStats( char *pcWriteBuffer ) ;
# 1641 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
BaseType_t xTaskNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction );
# 1730 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
BaseType_t xTaskNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction, BaseType_t *pxHigherPriorityTaskWoken );
# 1805 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t *pulNotificationValue, TickType_t xTicksToWait );
# 1906 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken );
# 1975 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait );
# 1996 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
BaseType_t xTaskIncrementTick( void ) ;
# 2029 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait ) ;
void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickType_t xTicksToWait ) ;
# 2043 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, const TickType_t xTicksToWait ) ;
# 2069 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList ) ;
BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue ) ;
# 2080 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskSwitchContext( void ) ;





TickType_t uxTaskResetEventItemValue( void ) ;




TaskHandle_t xTaskGetCurrentTaskHandle( void ) ;
# 2101 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
TaskHandle_t xTaskGetCurrentTaskHandleForCPU( BaseType_t cpuid );





void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut ) ;





BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait ) ;





void vTaskMissedYield( void ) ;





BaseType_t xTaskGetSchedulerState( void ) ;





void vTaskPriorityInherit( TaskHandle_t const pxMutexHolder ) ;





BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder ) ;




UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask ) ;





BaseType_t xTaskGetAffinity( TaskHandle_t xTask ) ;





void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle ) ;
# 2164 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
void vTaskStepTick( const TickType_t xTicksToJump ) ;
# 2180 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
eSleepModeStatus eTaskConfirmSleepModeStatus( void ) ;





void *pvTaskIncrementMutexHeldCount( void );
# 2197 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/task.h"
UBaseType_t uxTaskGetSnapshotAll( TaskSnapshot_t * const pxTaskSnapshotArray, const UBaseType_t uxArraySize, UBaseType_t * const pxTcbSz );
# 36 "modmachine.c" 2

# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h" 1
# 20 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_err.h" 1
# 14 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_err.h"
       



# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/assert.h" 1
# 39 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/assert.h"
void __assert (const char *, int, const char *) __attribute__ ((__noreturn__))
                                 ;
void __assert_func (const char *, int, const char *, const char *) __attribute__ ((__noreturn__))
                                 ;
# 19 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_err.h" 2





typedef int32_t esp_err_t;
# 45 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_err.h"
void _esp_error_check_failed(esp_err_t rc, const char *file, int line, const char *function, const char *expression) __attribute__((noreturn));
# 21 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h" 1
# 15 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
       



# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h" 1
# 18 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_types.h" 1
# 23 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_types.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 1 3 4
# 24 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_types.h" 2
# 19 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/gpio_reg.h" 1
# 17 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/gpio_reg.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/soc.h" 1
# 18 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/gpio_reg.h" 2
# 20 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/gpio_struct.h" 1
# 16 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/gpio_struct.h"
typedef volatile struct {
    uint32_t bt_select;
    uint32_t out;
    uint32_t out_w1ts;
    uint32_t out_w1tc;
    union {
        struct {
            uint32_t data: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } out1;
    union {
        struct {
            uint32_t data: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } out1_w1ts;
    union {
        struct {
            uint32_t data: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } out1_w1tc;
    union {
        struct {
            uint32_t sel: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } sdio_select;
    uint32_t enable;
    uint32_t enable_w1ts;
    uint32_t enable_w1tc;
    union {
        struct {
            uint32_t data: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } enable1;
    union {
        struct {
            uint32_t data: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } enable1_w1ts;
    union {
        struct {
            uint32_t data: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } enable1_w1tc;
    union {
        struct {
            uint32_t strapping: 16;
            uint32_t reserved16:16;
        };
        uint32_t val;
    } strap;
    uint32_t in;
    union {
        struct {
            uint32_t data: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } in1;
    uint32_t status;
    uint32_t status_w1ts;
    uint32_t status_w1tc;
    union {
        struct {
            uint32_t intr_st: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } status1;
    union {
        struct {
            uint32_t intr_st: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } status1_w1ts;
    union {
        struct {
            uint32_t intr_st: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } status1_w1tc;
    uint32_t reserved_5c;
    uint32_t acpu_int;
    uint32_t acpu_nmi_int;
    uint32_t pcpu_int;
    uint32_t pcpu_nmi_int;
    uint32_t cpusdio_int;
    union {
        struct {
            uint32_t intr: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } acpu_int1;
    union {
        struct {
            uint32_t intr: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } acpu_nmi_int1;
    union {
        struct {
            uint32_t intr: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } pcpu_int1;
    union {
        struct {
            uint32_t intr: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } pcpu_nmi_int1;
    union {
        struct {
            uint32_t intr: 8;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } cpusdio_int1;
    union {
        struct {
            uint32_t reserved0: 2;
            uint32_t pad_driver: 1;
            uint32_t reserved3: 4;
            uint32_t int_type: 3;
            uint32_t wakeup_enable: 1;
            uint32_t config: 2;
            uint32_t int_ena: 5;
            uint32_t reserved18: 14;
        };
        uint32_t val;
    } pin[40];
    union {
        struct {
            uint32_t rtc_max: 10;
            uint32_t reserved10: 21;
            uint32_t start: 1;
        };
        uint32_t val;
    } cali_conf;
    union {
        struct {
            uint32_t value_sync2: 20;
            uint32_t reserved20: 10;
            uint32_t rdy_real: 1;
            uint32_t rdy_sync2: 1;
        };
        uint32_t val;
    } cali_data;
    union {
        struct {
            uint32_t func_sel: 6;
            uint32_t sig_in_inv: 1;
            uint32_t sig_in_sel: 1;
            uint32_t reserved8: 24;
        };
        uint32_t val;
    } func_in_sel_cfg[256];
    union {
        struct {
            uint32_t func_sel: 9;
            uint32_t inv_sel: 1;
            uint32_t oen_sel: 1;
            uint32_t oen_inv_sel: 1;
            uint32_t reserved12: 20;
        };
        uint32_t val;
    } func_out_sel_cfg[40];
} gpio_dev_t;
extern gpio_dev_t GPIO;
# 21 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/rtc_io_reg.h" 1
# 22 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/io_mux_reg.h" 1
# 94 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/io_mux_reg.h"
static inline void __attribute__ ((deprecated)) PIN_PULLUP_DIS(uint32_t PIN_NAME)
{
    ({ do { _Static_assert(__builtin_choose_expr(__builtin_constant_p(!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC)), (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC)), 1), "(Cannot use REG_CLR_BIT for DPORT registers use DPORT_REG_CLR_BIT)"); (("(Cannot use REG_CLR_BIT for DPORT registers use DPORT_REG_CLR_BIT)" && (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC))) ? (void)0 : __assert_func ("/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/io_mux_reg.h", 96, __func__, "\"(Cannot use REG_CLR_BIT for DPORT registers use DPORT_REG_CLR_BIT)\" && (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC))")); } while(0);; (*(volatile uint32_t*)(PIN_NAME) &= ~(((1UL << (8))))); });
}

static inline void __attribute__ ((deprecated)) PIN_PULLUP_EN(uint32_t PIN_NAME)
{
    ({ do { _Static_assert(__builtin_choose_expr(__builtin_constant_p(!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC)), (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC)), 1), "(Cannot use REG_SET_BIT for DPORT registers use DPORT_REG_SET_BIT)"); (("(Cannot use REG_SET_BIT for DPORT registers use DPORT_REG_SET_BIT)" && (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC))) ? (void)0 : __assert_func ("/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/io_mux_reg.h", 101, __func__, "\"(Cannot use REG_SET_BIT for DPORT registers use DPORT_REG_SET_BIT)\" && (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC))")); } while(0);; (*(volatile uint32_t*)(PIN_NAME) |= (((1UL << (8))))); });
}

static inline void __attribute__ ((deprecated)) PIN_PULLDWN_DIS(uint32_t PIN_NAME)
{
    ({ do { _Static_assert(__builtin_choose_expr(__builtin_constant_p(!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC)), (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC)), 1), "(Cannot use REG_CLR_BIT for DPORT registers use DPORT_REG_CLR_BIT)"); (("(Cannot use REG_CLR_BIT for DPORT registers use DPORT_REG_CLR_BIT)" && (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC))) ? (void)0 : __assert_func ("/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/io_mux_reg.h", 106, __func__, "\"(Cannot use REG_CLR_BIT for DPORT registers use DPORT_REG_CLR_BIT)\" && (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC))")); } while(0);; (*(volatile uint32_t*)(PIN_NAME) &= ~(((1UL << (7))))); });
}

static inline void __attribute__ ((deprecated)) PIN_PULLDWN_EN(uint32_t PIN_NAME)
{
    ({ do { _Static_assert(__builtin_choose_expr(__builtin_constant_p(!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC)), (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC)), 1), "(Cannot use REG_SET_BIT for DPORT registers use DPORT_REG_SET_BIT)"); (("(Cannot use REG_SET_BIT for DPORT registers use DPORT_REG_SET_BIT)" && (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC))) ? (void)0 : __assert_func ("/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/io_mux_reg.h", 111, __func__, "\"(Cannot use REG_SET_BIT for DPORT registers use DPORT_REG_SET_BIT)\" && (!((((PIN_NAME)) >= 0x3ff00000) && ((PIN_NAME)) <= 0x3ff00FFC))")); } while(0);; (*(volatile uint32_t*)(PIN_NAME) |= (((1UL << (7))))); });
}
# 23 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/gpio_sig_map.h" 1
# 24 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h" 1
# 21 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_attr.h" 1
# 22 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h" 2
# 48 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
typedef enum {
    GPIO_PIN_INTR_DISABLE = 0,
    GPIO_PIN_INTR_POSEDGE = 1,
    GPIO_PIN_INTR_NEGEDGE = 2,
    GPIO_PIN_INTR_ANYEGDE = 3,
    GPIO_PIN_INTR_LOLEVEL = 4,
    GPIO_PIN_INTR_HILEVEL = 5
} GPIO_INT_TYPE;
# 64 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
typedef void (* gpio_intr_handler_fn_t)(uint32_t intr_mask, 
# 64 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h" 3 4
                                                           _Bool 
# 64 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
                                                                high, void *arg);
# 75 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_init(void);
# 92 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_output_set(uint32_t set_mask, uint32_t clear_mask, uint32_t enable_mask, uint32_t disable_mask);
# 109 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_output_set_high(uint32_t set_mask, uint32_t clear_mask, uint32_t enable_mask, uint32_t disable_mask);
# 118 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
uint32_t gpio_input_get(void);
# 127 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
uint32_t gpio_input_get_high(void);
# 140 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_intr_handler_register(gpio_intr_handler_fn_t fn, void *arg);
# 150 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
uint32_t gpio_intr_pending(void);
# 160 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
uint32_t gpio_intr_pending_high(void);
# 170 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_intr_ack(uint32_t ack_mask);
# 180 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_intr_ack_high(uint32_t ack_mask);
# 192 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_pin_wakeup_enable(uint32_t i, GPIO_INT_TYPE intr_state);
# 202 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_pin_wakeup_disable(void);
# 218 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_matrix_in(uint32_t gpio, uint32_t signal_idx, 
# 218 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h" 3 4
                                                       _Bool 
# 218 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
                                                            inv);
# 234 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_matrix_out(uint32_t gpio, uint32_t signal_idx, 
# 234 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h" 3 4
                                                        _Bool 
# 234 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
                                                             out_inv, 
# 234 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h" 3 4
                                                                      _Bool 
# 234 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
                                                                           oen_inv);
# 243 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_pad_select_gpio(uint8_t gpio_num);
# 254 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_pad_set_drv(uint8_t gpio_num, uint8_t drv);
# 263 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_pad_pullup(uint8_t gpio_num);
# 272 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_pad_pulldown(uint8_t gpio_num);
# 281 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_pad_unhold(uint8_t gpio_num);
# 290 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/gpio.h"
void gpio_pad_hold(uint8_t gpio_num);
# 25 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h" 2

# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h" 1
# 80 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h"
typedef void (*intr_handler_t)(void *arg);


typedef struct intr_handle_data_t intr_handle_data_t;
typedef intr_handle_data_t* intr_handle_t ;
# 101 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h"
esp_err_t esp_intr_mark_shared(int intno, int cpu, 
# 101 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h" 3 4
                                                  _Bool 
# 101 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h"
                                                       is_in_iram);
# 115 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h"
esp_err_t esp_intr_reserve(int intno, int cpu);
# 150 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h"
esp_err_t esp_intr_alloc(int source, int flags, intr_handler_t handler, void *arg, intr_handle_t *ret_handle);
# 188 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h"
esp_err_t esp_intr_alloc_intrstatus(int source, int flags, uint32_t intrstatusreg, uint32_t intrstatusmask, intr_handler_t handler, void *arg, intr_handle_t *ret_handle);
# 203 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h"
esp_err_t esp_intr_free(intr_handle_t handle);
# 213 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h"
int esp_intr_get_cpu(intr_handle_t handle);
# 222 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h"
int esp_intr_get_intno(intr_handle_t handle);
# 236 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h"
esp_err_t esp_intr_disable(intr_handle_t handle);
# 249 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr_alloc.h"
esp_err_t esp_intr_enable(intr_handle_t handle);





void esp_intr_noniram_disable();





void esp_intr_noniram_enable();
# 27 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h" 2
# 125 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
extern const uint32_t GPIO_PIN_MUX_REG[40];



typedef enum {
    GPIO_NUM_0 = 0,
    GPIO_NUM_1 = 1,
    GPIO_NUM_2 = 2,





    GPIO_NUM_3 = 3,
    GPIO_NUM_4 = 4,
    GPIO_NUM_5 = 5,
    GPIO_NUM_6 = 6,
    GPIO_NUM_7 = 7,
    GPIO_NUM_8 = 8,
    GPIO_NUM_9 = 9,
    GPIO_NUM_10 = 10,
    GPIO_NUM_11 = 11,
    GPIO_NUM_12 = 12,
    GPIO_NUM_13 = 13,
    GPIO_NUM_14 = 14,
    GPIO_NUM_15 = 15,
    GPIO_NUM_16 = 16,
    GPIO_NUM_17 = 17,
    GPIO_NUM_18 = 18,
    GPIO_NUM_19 = 19,

    GPIO_NUM_21 = 21,
    GPIO_NUM_22 = 22,
    GPIO_NUM_23 = 23,

    GPIO_NUM_25 = 25,
    GPIO_NUM_26 = 26,
    GPIO_NUM_27 = 27,

    GPIO_NUM_32 = 32,
    GPIO_NUM_33 = 33,
    GPIO_NUM_34 = 34,
    GPIO_NUM_35 = 35,
    GPIO_NUM_36 = 36,
    GPIO_NUM_37 = 37,
    GPIO_NUM_38 = 38,
    GPIO_NUM_39 = 39,
    GPIO_NUM_MAX = 40,

} gpio_num_t;

typedef enum {
    GPIO_INTR_DISABLE = 0,
    GPIO_INTR_POSEDGE = 1,
    GPIO_INTR_NEGEDGE = 2,
    GPIO_INTR_ANYEDGE = 3,
    GPIO_INTR_LOW_LEVEL = 4,
    GPIO_INTR_HIGH_LEVEL = 5,
    GPIO_INTR_MAX,
} gpio_int_type_t;

typedef enum {
    GPIO_MODE_INPUT = (0x00000001),
    GPIO_MODE_OUTPUT = (0x00000002),
    GPIO_MODE_OUTPUT_OD = (((0x00000002))|((0x00000004))),
    GPIO_MODE_INPUT_OUTPUT_OD = (((0x00000001))|((0x00000002))|((0x00000004))),
    GPIO_MODE_INPUT_OUTPUT = (((0x00000001))|((0x00000002))),
} gpio_mode_t;

typedef enum {
    GPIO_PULLUP_DISABLE = 0x0,
    GPIO_PULLUP_ENABLE = 0x1,
} gpio_pullup_t;

typedef enum {
    GPIO_PULLDOWN_DISABLE = 0x0,
    GPIO_PULLDOWN_ENABLE = 0x1,
} gpio_pulldown_t;




typedef struct {
    uint64_t pin_bit_mask;
    gpio_mode_t mode;
    gpio_pullup_t pull_up_en;
    gpio_pulldown_t pull_down_en;
    gpio_int_type_t intr_type;
} gpio_config_t;

typedef enum {
    GPIO_PULLUP_ONLY,
    GPIO_PULLDOWN_ONLY,
    GPIO_PULLUP_PULLDOWN,
    GPIO_FLOATING,
} gpio_pull_mode_t;


typedef void (*gpio_isr_t)(void*);
typedef intr_handle_t gpio_isr_handle_t;
# 238 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_config(const gpio_config_t *pGPIOConfig);
# 252 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_set_intr_type(gpio_num_t gpio_num, gpio_int_type_t intr_type);
# 264 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_intr_enable(gpio_num_t gpio_num);
# 276 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_intr_disable(gpio_num_t gpio_num);
# 289 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_set_level(gpio_num_t gpio_num, uint32_t level);
# 301 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
int gpio_get_level(gpio_num_t gpio_num);
# 316 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_set_direction(gpio_num_t gpio_num, gpio_mode_t mode);
# 331 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_set_pull_mode(gpio_num_t gpio_num, gpio_pull_mode_t pull);
# 344 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_wakeup_enable(gpio_num_t gpio_num, gpio_int_type_t intr_type);
# 355 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_wakeup_disable(gpio_num_t gpio_num);
# 380 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_isr_register(void (*fn)(void*), void * arg, int intr_alloc_flags, gpio_isr_handle_t *handle);
# 391 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_pullup_en(gpio_num_t gpio_num);
# 402 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_pullup_dis(gpio_num_t gpio_num);
# 413 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_pulldown_en(gpio_num_t gpio_num);
# 424 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_pulldown_dis(gpio_num_t gpio_num);
# 439 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_install_isr_service(int intr_alloc_flags);




void gpio_uninstall_isr_service();
# 470 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_isr_handler_add(gpio_num_t gpio_num, gpio_isr_t isr_handler, void* args);
# 482 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/gpio.h"
esp_err_t gpio_isr_handler_remove(gpio_num_t gpio_num);
# 20 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/touch_pad.h" 1
# 20 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/touch_pad.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr.h" 1
# 18 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/rom/ets_sys.h" 1
# 19 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_api.h" 1
# 37 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_api.h"
typedef void (*xt_handler)(void *);


typedef void (*xt_exc_handler)(XtExcFrame *);
# 60 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_api.h"
extern xt_exc_handler xt_set_exception_handler(int n, xt_exc_handler f);
# 73 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_api.h"
extern xt_handler xt_set_interrupt_handler(int n, xt_handler f, void * arg);
# 84 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_api.h"
extern void xt_ints_on(unsigned int mask);
# 95 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_api.h"
extern void xt_ints_off(unsigned int mask);







static inline void xt_set_intset(unsigned int arg)
{
    xthal_set_intset(arg);
}
# 115 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/xtensa_api.h"
static inline void xt_set_intclear(unsigned int arg)
{
    xthal_set_intclear(arg);
}
# 20 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_intr.h" 2
# 21 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/touch_pad.h" 2




typedef enum {
    TOUCH_PAD_NUM0 = 0,
    TOUCH_PAD_NUM1,
    TOUCH_PAD_NUM2,
    TOUCH_PAD_NUM3,
    TOUCH_PAD_NUM4,
    TOUCH_PAD_NUM5,
    TOUCH_PAD_NUM6,
    TOUCH_PAD_NUM7,
    TOUCH_PAD_NUM8,
    TOUCH_PAD_NUM9,
    TOUCH_PAD_MAX,
} touch_pad_t;

typedef intr_handle_t touch_isr_handle_t;
# 51 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/touch_pad.h"
esp_err_t touch_pad_init();
# 60 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/touch_pad.h"
esp_err_t touch_pad_deinit();
# 77 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/touch_pad.h"
esp_err_t touch_pad_config(touch_pad_t touch_num, uint16_t threshold);
# 94 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/touch_pad.h"
esp_err_t touch_pad_read(touch_pad_t touch_num, uint16_t * touch_value);
# 111 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/driver/include/driver/touch_pad.h"
esp_err_t touch_pad_isr_handler_register(void(*fn)(void *), void *arg, int intr_alloc_flags, touch_isr_handle_t *handle);
# 21 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h" 2
# 30 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
typedef enum {
    ESP_EXT1_WAKEUP_ALL_LOW = 0,
    ESP_EXT1_WAKEUP_ANY_HIGH = 1
} esp_ext1_wakeup_mode_t;




typedef enum {
    ESP_PD_DOMAIN_RTC_PERIPH,
    ESP_PD_DOMAIN_RTC_SLOW_MEM,
    ESP_PD_DOMAIN_RTC_FAST_MEM,
    ESP_PD_DOMAIN_MAX
} esp_deep_sleep_pd_domain_t;




typedef enum {
    ESP_PD_OPTION_OFF,
    ESP_PD_OPTION_ON,
    ESP_PD_OPTION_AUTO
} esp_deep_sleep_pd_option_t;




typedef enum {
    ESP_DEEP_SLEEP_WAKEUP_UNDEFINED,
    ESP_DEEP_SLEEP_WAKEUP_EXT0,
    ESP_DEEP_SLEEP_WAKEUP_EXT1,
    ESP_DEEP_SLEEP_WAKEUP_TIMER,
    ESP_DEEP_SLEEP_WAKEUP_TOUCHPAD,
    ESP_DEEP_SLEEP_WAKEUP_ULP,
} esp_deep_sleep_wakeup_cause_t;
# 77 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
esp_err_t esp_deep_sleep_enable_ulp_wakeup();
# 86 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
esp_err_t esp_deep_sleep_enable_timer_wakeup(uint64_t time_in_us);
# 100 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
esp_err_t esp_deep_sleep_enable_touchpad_wakeup();
# 109 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
touch_pad_t esp_deep_sleep_get_touchpad_wakeup_status();
# 136 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
esp_err_t esp_deep_sleep_enable_ext0_wakeup(gpio_num_t gpio_num, int level);
# 168 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
esp_err_t esp_deep_sleep_enable_ext1_wakeup(uint64_t mask, esp_ext1_wakeup_mode_t mode);
# 178 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
uint64_t esp_deep_sleep_get_ext1_wakeup_status();
# 191 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
esp_err_t esp_deep_sleep_pd_config(esp_deep_sleep_pd_domain_t domain,
                                   esp_deep_sleep_pd_option_t option);






void esp_deep_sleep_start() __attribute__((noreturn));
# 223 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
void esp_deep_sleep(uint64_t time_in_us) __attribute__((noreturn));
# 233 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
void system_deep_sleep(uint64_t time_in_us) __attribute__((noreturn, deprecated));







esp_deep_sleep_wakeup_cause_t esp_deep_sleep_get_wakeup_cause();
# 256 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
void esp_wake_deep_sleep(void);





typedef void (*esp_deep_sleep_wake_stub_fn_t)(void);
# 275 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_deep_sleep.h"
void esp_set_deep_sleep_wake_stub(esp_deep_sleep_wake_stub_fn_t new_stub);






esp_deep_sleep_wake_stub_fn_t esp_get_deep_sleep_wake_stub(void);






void esp_default_wake_deep_sleep(void);
# 22 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h" 2





typedef enum {
    ESP_MAC_WIFI_STA,
    ESP_MAC_WIFI_SOFTAP,
    ESP_MAC_BT,
    ESP_MAC_ETH,
} esp_mac_type_t;
# 42 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
void system_init(void) __attribute__ ((deprecated));







void system_restore(void) __attribute__ ((deprecated));
# 60 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
void esp_restart(void) __attribute__ ((noreturn));







void system_restart(void) __attribute__ ((deprecated, noreturn));







uint32_t system_get_time(void) __attribute__ ((deprecated));
# 86 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
uint32_t esp_get_free_heap_size(void);
# 96 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
uint32_t system_get_free_heap_size(void) __attribute__ ((deprecated));






uint32_t esp_random(void);
# 118 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
esp_err_t esp_base_mac_addr_set(uint8_t *mac);
# 128 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
esp_err_t esp_base_mac_addr_get(uint8_t *mac);
# 144 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
esp_err_t esp_efuse_mac_get_custom(uint8_t *mac);
# 153 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
esp_err_t esp_efuse_mac_get_default(uint8_t *mac);
# 165 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
esp_err_t esp_efuse_read_mac(uint8_t *mac) __attribute__ ((deprecated));
# 176 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
esp_err_t system_efuse_read_mac(uint8_t *mac) __attribute__ ((deprecated));
# 190 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
esp_err_t esp_read_mac(uint8_t* mac, esp_mac_type_t type);
# 206 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
esp_err_t esp_derive_local_mac(uint8_t* local_mac, const uint8_t* universal_mac);
# 215 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
const char* system_get_sdk_version(void) __attribute__ ((deprecated));






const char* esp_get_idf_version(void);





typedef enum {
    CHIP_ESP32 = 1,
} esp_chip_model_t;
# 243 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/esp32/include/esp_system.h"
typedef struct {
    esp_chip_model_t model;
    uint32_t features;
    uint8_t cores;
    uint8_t revision;
} esp_chip_info_t;





void esp_chip_info(esp_chip_info_t* out_info);
# 38 "modmachine.c" 2

# 1 "../micropython/py/obj.h" 1
# 29 "../micropython/py/obj.h"
# 1 "../micropython/py/mpconfig.h" 1
# 45 "../micropython/py/mpconfig.h"
# 1 "./mpconfigport.h" 1
# 173 "./mpconfigport.h"
extern const struct _mp_obj_module_t esp_module;
extern const struct _mp_obj_module_t onewire_module;
extern const struct _mp_obj_module_t utime_module;
extern const struct _mp_obj_module_t uos_module;
extern const struct _mp_obj_module_t mp_module_usocket;
extern const struct _mp_obj_module_t mp_module_machine;
extern const struct _mp_obj_module_t mp_module_network;
# 248 "./mpconfigport.h"
typedef int32_t mp_int_t;
typedef uint32_t mp_uint_t;
typedef long mp_off_t;
# 46 "../micropython/py/mpconfig.h" 2
# 542 "../micropython/py/mpconfig.h"
typedef float mp_float_t;
# 30 "../micropython/py/obj.h" 2
# 1 "../micropython/py/misc.h" 1
# 35 "../micropython/py/misc.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/xtensa-esp32-elf_psram/lib/gcc/xtensa-esp32-elf/5.2.0/include/stddef.h" 1 3 4
# 36 "../micropython/py/misc.h" 2

typedef unsigned char byte;
typedef unsigned int uint;
# 82 "../micropython/py/misc.h"
void *m_malloc(size_t num_bytes);
void *m_malloc_maybe(size_t num_bytes);
void *m_malloc_with_finaliser(size_t num_bytes);
void *m_malloc0(size_t num_bytes);





void *m_realloc(void *ptr, size_t new_num_bytes);
void *m_realloc_maybe(void *ptr, size_t new_num_bytes, 
# 92 "../micropython/py/misc.h" 3 4
                                                      _Bool 
# 92 "../micropython/py/misc.h"
                                                           allow_move);
void m_free(void *ptr);

__attribute__((noreturn)) void *m_malloc_fail(size_t num_bytes);
# 115 "../micropython/py/misc.h"
typedef uint32_t unichar;






unichar utf8_get_char(const byte *s);
const byte *utf8_next_char(const byte *s);


# 125 "../micropython/py/misc.h" 3 4
_Bool 
# 125 "../micropython/py/misc.h"
    unichar_isspace(unichar c);

# 126 "../micropython/py/misc.h" 3 4
_Bool 
# 126 "../micropython/py/misc.h"
    unichar_isalpha(unichar c);

# 127 "../micropython/py/misc.h" 3 4
_Bool 
# 127 "../micropython/py/misc.h"
    unichar_isprint(unichar c);

# 128 "../micropython/py/misc.h" 3 4
_Bool 
# 128 "../micropython/py/misc.h"
    unichar_isdigit(unichar c);

# 129 "../micropython/py/misc.h" 3 4
_Bool 
# 129 "../micropython/py/misc.h"
    unichar_isxdigit(unichar c);

# 130 "../micropython/py/misc.h" 3 4
_Bool 
# 130 "../micropython/py/misc.h"
    unichar_isident(unichar c);

# 131 "../micropython/py/misc.h" 3 4
_Bool 
# 131 "../micropython/py/misc.h"
    unichar_isupper(unichar c);

# 132 "../micropython/py/misc.h" 3 4
_Bool 
# 132 "../micropython/py/misc.h"
    unichar_islower(unichar c);
unichar unichar_tolower(unichar c);
unichar unichar_toupper(unichar c);
mp_uint_t unichar_xdigit_value(unichar c);
mp_uint_t unichar_charlen(const char *str, mp_uint_t len);





typedef struct _vstr_t {
    size_t alloc;
    size_t len;
    char *buf;
    
# 146 "../micropython/py/misc.h" 3 4
   _Bool 
# 146 "../micropython/py/misc.h"
        fixed_buf : 1;
} vstr_t;




void vstr_init(vstr_t *vstr, size_t alloc);
void vstr_init_len(vstr_t *vstr, size_t len);
void vstr_init_fixed_buf(vstr_t *vstr, size_t alloc, char *buf);
struct _mp_print_t;
void vstr_init_print(vstr_t *vstr, size_t alloc, struct _mp_print_t *print);
void vstr_clear(vstr_t *vstr);
vstr_t *vstr_new(size_t alloc);
void vstr_free(vstr_t *vstr);
static inline void vstr_reset(vstr_t *vstr) { vstr->len = 0; }
static inline char *vstr_str(vstr_t *vstr) { return vstr->buf; }
static inline size_t vstr_len(vstr_t *vstr) { return vstr->len; }
void vstr_hint_size(vstr_t *vstr, size_t size);
char *vstr_extend(vstr_t *vstr, size_t size);
char *vstr_add_len(vstr_t *vstr, size_t len);
char *vstr_null_terminated_str(vstr_t *vstr);
void vstr_add_byte(vstr_t *vstr, byte v);
void vstr_add_char(vstr_t *vstr, unichar chr);
void vstr_add_str(vstr_t *vstr, const char *str);
void vstr_add_strn(vstr_t *vstr, const char *str, size_t len);
void vstr_ins_byte(vstr_t *vstr, size_t byte_pos, byte b);
void vstr_ins_char(vstr_t *vstr, size_t char_pos, unichar chr);
void vstr_cut_head_bytes(vstr_t *vstr, size_t bytes_to_cut);
void vstr_cut_tail_bytes(vstr_t *vstr, size_t bytes_to_cut);
void vstr_cut_out_bytes(vstr_t *vstr, size_t byte_pos, size_t bytes_to_cut);
void vstr_printf(vstr_t *vstr, const char *fmt, ...);
# 195 "../micropython/py/misc.h"
int DEBUG_printf(const char *fmt, ...);

extern mp_uint_t mp_verbose_flag;






static inline mp_uint_t count_lead_ones(byte val) {
    mp_uint_t c = 0;
    for (byte mask = 0x80; val & mask; mask >>= 1) {
        c++;
    }
    return c;
}
# 31 "../micropython/py/obj.h" 2
# 1 "../micropython/py/qstr.h" 1
# 39 "../micropython/py/qstr.h"
enum {





    MP_QSTRnumber_of,
};

typedef size_t qstr;

typedef struct _qstr_pool_t {
    struct _qstr_pool_t *prev;
    size_t total_prev_len;
    size_t alloc;
    size_t len;
    const byte *qstrs[];
} qstr_pool_t;



void qstr_init(void);

mp_uint_t qstr_compute_hash(const byte *data, size_t len);
qstr qstr_find_strn(const char *str, size_t str_len);

qstr qstr_from_str(const char *str);
qstr qstr_from_strn(const char *str, size_t len);

byte *qstr_build_start(size_t len, byte **q_ptr);
qstr qstr_build_end(byte *q_ptr);

mp_uint_t qstr_hash(qstr q);
const char *qstr_str(qstr q);
size_t qstr_len(qstr q);
const byte *qstr_data(qstr q, size_t *len);

void qstr_pool_info(size_t *n_pool, size_t *n_qstr, size_t *n_str_data_bytes, size_t *n_total_bytes);
void qstr_dump_data(void);
# 32 "../micropython/py/obj.h" 2
# 1 "../micropython/py/mpprint.h" 1
# 48 "../micropython/py/mpprint.h"
typedef void (*mp_print_strn_t)(void *data, const char *str, size_t len);

typedef struct _mp_print_t {
    void *data;
    mp_print_strn_t print_strn;
} mp_print_t;



extern const mp_print_t mp_plat_print;


extern const mp_print_t mp_sys_stdout_print;


int mp_print_str(const mp_print_t *print, const char *str);
int mp_print_strn(const mp_print_t *print, const char *str, size_t len, int flags, char fill, int width);

int mp_print_float(const mp_print_t *print, mp_float_t f, char fmt, int flags, char fill, int width, int prec);


int mp_printf(const mp_print_t *print, const char *fmt, ...);
# 33 "../micropython/py/obj.h" 2
# 41 "../micropython/py/obj.h"
typedef void *mp_obj_t;
typedef const void *mp_const_obj_t;




typedef struct _mp_obj_type_t mp_obj_type_t;



struct _mp_obj_base_t {
    const mp_obj_type_t *type ;
};
typedef struct _mp_obj_base_t mp_obj_base_t;
# 83 "../micropython/py/obj.h"
static inline 
# 83 "../micropython/py/obj.h" 3 4
             _Bool 
# 83 "../micropython/py/obj.h"
                  MP_OBJ_IS_SMALL_INT(mp_const_obj_t o)
    { return ((((mp_int_t)(o)) & 1) != 0); }



static inline 
# 88 "../micropython/py/obj.h" 3 4
             _Bool 
# 88 "../micropython/py/obj.h"
                  MP_OBJ_IS_QSTR(mp_const_obj_t o)
    { return ((((mp_int_t)(o)) & 3) == 2); }






extern const struct _mp_obj_float_t mp_const_float_e_obj;
extern const struct _mp_obj_float_t mp_const_float_pi_obj;


mp_float_t mp_obj_float_get(mp_obj_t self_in);
mp_obj_t mp_obj_new_float(mp_float_t value);


static inline 
# 104 "../micropython/py/obj.h" 3 4
             _Bool 
# 104 "../micropython/py/obj.h"
                  MP_OBJ_IS_OBJ(mp_const_obj_t o)
    { return ((((mp_int_t)(o)) & 3) == 0); }
# 238 "../micropython/py/obj.h"
typedef mp_const_obj_t mp_rom_obj_t;
# 264 "../micropython/py/obj.h"
extern const mp_obj_type_t mp_type_int;
extern const mp_obj_type_t mp_type_bool;
static inline 
# 266 "../micropython/py/obj.h" 3 4
             _Bool 
# 266 "../micropython/py/obj.h"
                  mp_obj_is_integer(mp_const_obj_t o) { return (MP_OBJ_IS_SMALL_INT(o) || (MP_OBJ_IS_OBJ(o) && (((mp_obj_base_t*)((void*)o))->type == (&mp_type_int)))) || (MP_OBJ_IS_OBJ(o) && (((mp_obj_base_t*)((void*)o))->type == (&mp_type_bool))); }
# 340 "../micropython/py/obj.h"
typedef struct _mp_map_elem_t {
    mp_obj_t key;
    mp_obj_t value;
} mp_map_elem_t;

typedef struct _mp_rom_map_elem_t {
    mp_rom_obj_t key;
    mp_rom_obj_t value;
} mp_rom_map_elem_t;






typedef struct _mp_map_t {
    size_t all_keys_are_qstrs : 1;
    size_t is_fixed : 1;
    size_t is_ordered : 1;
    size_t used : (8 * sizeof(size_t) - 3);
    size_t alloc;
    mp_map_elem_t *table;
} mp_map_t;


typedef enum _mp_map_lookup_kind_t {
    MP_MAP_LOOKUP = 0,
    MP_MAP_LOOKUP_ADD_IF_NOT_FOUND = 1,
    MP_MAP_LOOKUP_REMOVE_IF_FOUND = 2,
    MP_MAP_LOOKUP_ADD_IF_NOT_FOUND_OR_REMOVE_IF_FOUND = 3,
} mp_map_lookup_kind_t;

extern const mp_map_t mp_const_empty_map;

static inline 
# 374 "../micropython/py/obj.h" 3 4
             _Bool 
# 374 "../micropython/py/obj.h"
                  MP_MAP_SLOT_IS_FILLED(const mp_map_t *map, size_t pos) { return ((map)->table[pos].key != (((mp_obj_t)(void*)0)) && (map)->table[pos].key != (((mp_obj_t)(void*)8))); }

void mp_map_init(mp_map_t *map, size_t n);
void mp_map_init_fixed_table(mp_map_t *map, size_t n, const mp_obj_t *table);
mp_map_t *mp_map_new(size_t n);
void mp_map_deinit(mp_map_t *map);
void mp_map_free(mp_map_t *map);
mp_map_elem_t *mp_map_lookup(mp_map_t *map, mp_obj_t index, mp_map_lookup_kind_t lookup_kind);
void mp_map_clear(mp_map_t *map);
void mp_map_dump(mp_map_t *map);



typedef struct _mp_set_t {
    size_t alloc;
    size_t used;
    mp_obj_t *table;
} mp_set_t;

static inline 
# 393 "../micropython/py/obj.h" 3 4
             _Bool 
# 393 "../micropython/py/obj.h"
                  MP_SET_SLOT_IS_FILLED(const mp_set_t *set, size_t pos) { return ((set)->table[pos] != (((mp_obj_t)(void*)0)) && (set)->table[pos] != (((mp_obj_t)(void*)8))); }

void mp_set_init(mp_set_t *set, size_t n);
mp_obj_t mp_set_lookup(mp_set_t *set, mp_obj_t index, mp_map_lookup_kind_t lookup_kind);
mp_obj_t mp_set_remove_first(mp_set_t *set);
void mp_set_clear(mp_set_t *set);



typedef mp_obj_t (*mp_fun_0_t)(void);
typedef mp_obj_t (*mp_fun_1_t)(mp_obj_t);
typedef mp_obj_t (*mp_fun_2_t)(mp_obj_t, mp_obj_t);
typedef mp_obj_t (*mp_fun_3_t)(mp_obj_t, mp_obj_t, mp_obj_t);
typedef mp_obj_t (*mp_fun_var_t)(size_t n, const mp_obj_t *);


typedef mp_obj_t (*mp_fun_kw_t)(size_t n, const mp_obj_t *, mp_map_t *);

typedef enum {
    PRINT_STR = 0,
    PRINT_REPR = 1,
    PRINT_EXC = 2,
    PRINT_JSON = 3,
    PRINT_RAW = 4,
    PRINT_EXC_SUBCLASS = 0x80,
} mp_print_kind_t;

typedef struct _mp_obj_iter_buf_t {
    mp_obj_base_t base;
    mp_obj_t buf[3];
} mp_obj_iter_buf_t;





typedef void (*mp_print_fun_t)(const mp_print_t *print, mp_obj_t o, mp_print_kind_t kind);
typedef mp_obj_t (*mp_make_new_fun_t)(const mp_obj_type_t *type, size_t n_args, size_t n_kw, const mp_obj_t *args);
typedef mp_obj_t (*mp_call_fun_t)(mp_obj_t fun, size_t n_args, size_t n_kw, const mp_obj_t *args);
typedef mp_obj_t (*mp_unary_op_fun_t)(mp_uint_t op, mp_obj_t);
typedef mp_obj_t (*mp_binary_op_fun_t)(mp_uint_t op, mp_obj_t, mp_obj_t);
typedef void (*mp_attr_fun_t)(mp_obj_t self_in, qstr attr, mp_obj_t *dest);
typedef mp_obj_t (*mp_subscr_fun_t)(mp_obj_t self_in, mp_obj_t index, mp_obj_t value);
typedef mp_obj_t (*mp_getiter_fun_t)(mp_obj_t self_in, mp_obj_iter_buf_t *iter_buf);


typedef struct _mp_buffer_info_t {





    void *buf;
    size_t len;
    int typecode;




} mp_buffer_info_t;



typedef struct _mp_buffer_p_t {
    mp_int_t (*get_buffer)(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);
} mp_buffer_p_t;

# 459 "../micropython/py/obj.h" 3 4
_Bool 
# 459 "../micropython/py/obj.h"
    mp_get_buffer(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);
void mp_get_buffer_raise(mp_obj_t obj, mp_buffer_info_t *bufinfo, mp_uint_t flags);


typedef struct _mp_stream_p_t {


    mp_uint_t (*read)(mp_obj_t obj, void *buf, mp_uint_t size, int *errcode);
    mp_uint_t (*write)(mp_obj_t obj, const void *buf, mp_uint_t size, int *errcode);
    mp_uint_t (*ioctl)(mp_obj_t obj, mp_uint_t request, uintptr_t arg, int *errcode);
    mp_uint_t is_text : 1;
} mp_stream_p_t;

struct _mp_obj_type_t {

    mp_obj_base_t base;


    qstr name;


    mp_print_fun_t print;


    mp_make_new_fun_t make_new;


    mp_call_fun_t call;



    mp_unary_op_fun_t unary_op;
    mp_binary_op_fun_t binary_op;
# 504 "../micropython/py/obj.h"
    mp_attr_fun_t attr;






    mp_subscr_fun_t subscr;




    mp_getiter_fun_t getiter;



    mp_fun_1_t iternext;


    mp_buffer_p_t buffer_p;


    const void *protocol;





    const void *parent;


    struct _mp_obj_dict_t *locals_dict;
};


extern const mp_obj_type_t mp_type_type;
extern const mp_obj_type_t mp_type_object;
extern const mp_obj_type_t mp_type_NoneType;
extern const mp_obj_type_t mp_type_bool;
extern const mp_obj_type_t mp_type_int;
extern const mp_obj_type_t mp_type_str;
extern const mp_obj_type_t mp_type_bytes;
extern const mp_obj_type_t mp_type_bytearray;
extern const mp_obj_type_t mp_type_memoryview;
extern const mp_obj_type_t mp_type_float;
extern const mp_obj_type_t mp_type_complex;
extern const mp_obj_type_t mp_type_tuple;
extern const mp_obj_type_t mp_type_list;
extern const mp_obj_type_t mp_type_map;
extern const mp_obj_type_t mp_type_enumerate;
extern const mp_obj_type_t mp_type_filter;
extern const mp_obj_type_t mp_type_dict;
extern const mp_obj_type_t mp_type_ordereddict;
extern const mp_obj_type_t mp_type_range;
extern const mp_obj_type_t mp_type_set;
extern const mp_obj_type_t mp_type_frozenset;
extern const mp_obj_type_t mp_type_slice;
extern const mp_obj_type_t mp_type_zip;
extern const mp_obj_type_t mp_type_array;
extern const mp_obj_type_t mp_type_super;
extern const mp_obj_type_t mp_type_gen_instance;
extern const mp_obj_type_t mp_type_fun_builtin_0;
extern const mp_obj_type_t mp_type_fun_builtin_1;
extern const mp_obj_type_t mp_type_fun_builtin_2;
extern const mp_obj_type_t mp_type_fun_builtin_3;
extern const mp_obj_type_t mp_type_fun_builtin_var;
extern const mp_obj_type_t mp_type_fun_bc;
extern const mp_obj_type_t mp_type_module;
extern const mp_obj_type_t mp_type_staticmethod;
extern const mp_obj_type_t mp_type_classmethod;
extern const mp_obj_type_t mp_type_property;
extern const mp_obj_type_t mp_type_stringio;
extern const mp_obj_type_t mp_type_bytesio;
extern const mp_obj_type_t mp_type_reversed;
extern const mp_obj_type_t mp_type_polymorph_iter;


extern const mp_obj_type_t mp_type_BaseException;
extern const mp_obj_type_t mp_type_ArithmeticError;
extern const mp_obj_type_t mp_type_AssertionError;
extern const mp_obj_type_t mp_type_AttributeError;
extern const mp_obj_type_t mp_type_EOFError;
extern const mp_obj_type_t mp_type_Exception;
extern const mp_obj_type_t mp_type_GeneratorExit;
extern const mp_obj_type_t mp_type_ImportError;
extern const mp_obj_type_t mp_type_IndentationError;
extern const mp_obj_type_t mp_type_IndexError;
extern const mp_obj_type_t mp_type_KeyboardInterrupt;
extern const mp_obj_type_t mp_type_KeyError;
extern const mp_obj_type_t mp_type_LookupError;
extern const mp_obj_type_t mp_type_MemoryError;
extern const mp_obj_type_t mp_type_NameError;
extern const mp_obj_type_t mp_type_NotImplementedError;
extern const mp_obj_type_t mp_type_OSError;
extern const mp_obj_type_t mp_type_TimeoutError;
extern const mp_obj_type_t mp_type_OverflowError;
extern const mp_obj_type_t mp_type_RuntimeError;
extern const mp_obj_type_t mp_type_StopAsyncIteration;
extern const mp_obj_type_t mp_type_StopIteration;
extern const mp_obj_type_t mp_type_SyntaxError;
extern const mp_obj_type_t mp_type_SystemExit;
extern const mp_obj_type_t mp_type_TypeError;
extern const mp_obj_type_t mp_type_UnicodeError;
extern const mp_obj_type_t mp_type_ValueError;
extern const mp_obj_type_t mp_type_ViperTypeError;
extern const mp_obj_type_t mp_type_ZeroDivisionError;
# 618 "../micropython/py/obj.h"
extern const struct _mp_obj_none_t mp_const_none_obj;
extern const struct _mp_obj_bool_t mp_const_false_obj;
extern const struct _mp_obj_bool_t mp_const_true_obj;
extern const struct _mp_obj_str_t mp_const_empty_bytes_obj;
extern const struct _mp_obj_tuple_t mp_const_empty_tuple_obj;
extern const struct _mp_obj_singleton_t mp_const_ellipsis_obj;
extern const struct _mp_obj_singleton_t mp_const_notimplemented_obj;
extern const struct _mp_obj_exception_t mp_const_MemoryError_obj;
extern const struct _mp_obj_exception_t mp_const_GeneratorExit_obj;



mp_obj_t mp_obj_new_type(qstr name, mp_obj_t bases_tuple, mp_obj_t locals_dict);
mp_obj_t mp_obj_new_none(void);
static inline mp_obj_t mp_obj_new_bool(mp_int_t x) { return x ? (((mp_obj_t)&mp_const_true_obj)) : (((mp_obj_t)&mp_const_false_obj)); }
mp_obj_t mp_obj_new_cell(mp_obj_t obj);
mp_obj_t mp_obj_new_int(mp_int_t value);
mp_obj_t mp_obj_new_int_from_uint(mp_uint_t value);
mp_obj_t mp_obj_new_int_from_str_len(const char **str, size_t len, 
# 636 "../micropython/py/obj.h" 3 4
                                                                  _Bool 
# 636 "../micropython/py/obj.h"
                                                                       neg, unsigned int base);
mp_obj_t mp_obj_new_int_from_ll(long long val);
mp_obj_t mp_obj_new_int_from_ull(unsigned long long val);
mp_obj_t mp_obj_new_str(const char* data, size_t len, 
# 639 "../micropython/py/obj.h" 3 4
                                                     _Bool 
# 639 "../micropython/py/obj.h"
                                                          make_qstr_if_not_already);
mp_obj_t mp_obj_new_str_from_vstr(const mp_obj_type_t *type, vstr_t *vstr);
mp_obj_t mp_obj_new_bytes(const byte* data, size_t len);
mp_obj_t mp_obj_new_bytearray(size_t n, void *items);
mp_obj_t mp_obj_new_bytearray_by_ref(size_t n, void *items);

mp_obj_t mp_obj_new_int_from_float(mp_float_t val);
mp_obj_t mp_obj_new_complex(mp_float_t real, mp_float_t imag);

mp_obj_t mp_obj_new_exception(const mp_obj_type_t *exc_type);
mp_obj_t mp_obj_new_exception_arg1(const mp_obj_type_t *exc_type, mp_obj_t arg);
mp_obj_t mp_obj_new_exception_args(const mp_obj_type_t *exc_type, size_t n_args, const mp_obj_t *args);
mp_obj_t mp_obj_new_exception_msg(const mp_obj_type_t *exc_type, const char *msg);
mp_obj_t mp_obj_new_exception_msg_varg(const mp_obj_type_t *exc_type, const char *fmt, ...);
mp_obj_t mp_obj_new_fun_bc(mp_obj_t def_args, mp_obj_t def_kw_args, const byte *code, const mp_uint_t *const_table);
mp_obj_t mp_obj_new_fun_native(mp_obj_t def_args_in, mp_obj_t def_kw_args, const void *fun_data, const mp_uint_t *const_table);
mp_obj_t mp_obj_new_fun_viper(size_t n_args, void *fun_data, mp_uint_t type_sig);
mp_obj_t mp_obj_new_fun_asm(size_t n_args, void *fun_data, mp_uint_t type_sig);
mp_obj_t mp_obj_new_gen_wrap(mp_obj_t fun);
mp_obj_t mp_obj_new_closure(mp_obj_t fun, size_t n_closed, const mp_obj_t *closed);
mp_obj_t mp_obj_new_tuple(size_t n, const mp_obj_t *items);
mp_obj_t mp_obj_new_list(size_t n, mp_obj_t *items);
mp_obj_t mp_obj_new_dict(size_t n_args);
mp_obj_t mp_obj_new_set(size_t n_args, mp_obj_t *items);
mp_obj_t mp_obj_new_slice(mp_obj_t start, mp_obj_t stop, mp_obj_t step);
mp_obj_t mp_obj_new_bound_meth(mp_obj_t meth, mp_obj_t self);
mp_obj_t mp_obj_new_getitem_iter(mp_obj_t *args, mp_obj_iter_buf_t *iter_buf);
mp_obj_t mp_obj_new_module(qstr module_name);
mp_obj_t mp_obj_new_memoryview(byte typecode, size_t nitems, void *items);

mp_obj_type_t *mp_obj_get_type(mp_const_obj_t o_in);
const char *mp_obj_get_type_str(mp_const_obj_t o_in);

# 671 "../micropython/py/obj.h" 3 4
_Bool 
# 671 "../micropython/py/obj.h"
    mp_obj_is_subclass_fast(mp_const_obj_t object, mp_const_obj_t classinfo);
mp_obj_t mp_instance_cast_to_native_base(mp_const_obj_t self_in, mp_const_obj_t native_type);

void mp_obj_print_helper(const mp_print_t *print, mp_obj_t o_in, mp_print_kind_t kind);
void mp_obj_print(mp_obj_t o, mp_print_kind_t kind);
void mp_obj_print_exception(const mp_print_t *print, mp_obj_t exc);


# 678 "../micropython/py/obj.h" 3 4
_Bool 
# 678 "../micropython/py/obj.h"
    mp_obj_is_true(mp_obj_t arg);

# 679 "../micropython/py/obj.h" 3 4
_Bool 
# 679 "../micropython/py/obj.h"
    mp_obj_is_callable(mp_obj_t o_in);

# 680 "../micropython/py/obj.h" 3 4
_Bool 
# 680 "../micropython/py/obj.h"
    mp_obj_equal(mp_obj_t o1, mp_obj_t o2);

mp_int_t mp_obj_get_int(mp_const_obj_t arg);
mp_int_t mp_obj_get_int_truncated(mp_const_obj_t arg);

# 684 "../micropython/py/obj.h" 3 4
_Bool 
# 684 "../micropython/py/obj.h"
    mp_obj_get_int_maybe(mp_const_obj_t arg, mp_int_t *value);

mp_float_t mp_obj_get_float(mp_obj_t self_in);
void mp_obj_get_complex(mp_obj_t self_in, mp_float_t *real, mp_float_t *imag);


void mp_obj_get_array(mp_obj_t o, size_t *len, mp_obj_t **items);
void mp_obj_get_array_fixed_n(mp_obj_t o, size_t len, mp_obj_t **items);
size_t mp_get_index(const mp_obj_type_t *type, size_t len, mp_obj_t index, 
# 692 "../micropython/py/obj.h" 3 4
                                                                          _Bool 
# 692 "../micropython/py/obj.h"
                                                                               is_slice);
mp_obj_t mp_obj_id(mp_obj_t o_in);
mp_obj_t mp_obj_len(mp_obj_t o_in);
mp_obj_t mp_obj_len_maybe(mp_obj_t o_in);
mp_obj_t mp_obj_subscr(mp_obj_t base, mp_obj_t index, mp_obj_t val);
mp_obj_t mp_generic_unary_op(mp_uint_t op, mp_obj_t o_in);


mp_obj_t mp_obj_cell_get(mp_obj_t self_in);
void mp_obj_cell_set(mp_obj_t self_in, mp_obj_t obj);



mp_int_t mp_obj_int_get_truncated(mp_const_obj_t self_in);

mp_int_t mp_obj_int_get_checked(mp_const_obj_t self_in);




# 711 "../micropython/py/obj.h" 3 4
_Bool 
# 711 "../micropython/py/obj.h"
    mp_obj_is_exception_type(mp_obj_t self_in);

# 712 "../micropython/py/obj.h" 3 4
_Bool 
# 712 "../micropython/py/obj.h"
    mp_obj_is_exception_instance(mp_obj_t self_in);

# 713 "../micropython/py/obj.h" 3 4
_Bool 
# 713 "../micropython/py/obj.h"
    mp_obj_exception_match(mp_obj_t exc, mp_const_obj_t exc_type);
void mp_obj_exception_clear_traceback(mp_obj_t self_in);
void mp_obj_exception_add_traceback(mp_obj_t self_in, qstr file, size_t line, qstr block);
void mp_obj_exception_get_traceback(mp_obj_t self_in, size_t *n, size_t **values);
mp_obj_t mp_obj_exception_get_value(mp_obj_t self_in);
mp_obj_t mp_obj_exception_make_new(const mp_obj_type_t *type_in, size_t n_args, size_t n_kw, const mp_obj_t *args);
mp_obj_t mp_alloc_emergency_exception_buf(mp_obj_t size_in);
void mp_init_emergency_exception_buf(void);



# 723 "../micropython/py/obj.h" 3 4
_Bool 
# 723 "../micropython/py/obj.h"
    mp_obj_str_equal(mp_obj_t s1, mp_obj_t s2);
qstr mp_obj_str_get_qstr(mp_obj_t self_in);
const char *mp_obj_str_get_str(mp_obj_t self_in);
const char *mp_obj_str_get_data(mp_obj_t self_in, size_t *len);
mp_obj_t mp_obj_str_intern(mp_obj_t str);
void mp_str_print_quoted(const mp_print_t *print, const byte *str_data, size_t str_len, 
# 728 "../micropython/py/obj.h" 3 4
                                                                                       _Bool 
# 728 "../micropython/py/obj.h"
                                                                                            is_bytes);






static inline mp_int_t mp_float_hash(mp_float_t val) { return (mp_int_t)val; }

mp_obj_t mp_obj_float_binary_op(mp_uint_t op, mp_float_t lhs_val, mp_obj_t rhs);


void mp_obj_complex_get(mp_obj_t self_in, mp_float_t *real, mp_float_t *imag);
mp_obj_t mp_obj_complex_binary_op(mp_uint_t op, mp_float_t lhs_real, mp_float_t lhs_imag, mp_obj_t rhs_in);





void mp_obj_tuple_get(mp_obj_t self_in, size_t *len, mp_obj_t **items);
void mp_obj_tuple_del(mp_obj_t self_in);
mp_int_t mp_obj_tuple_hash(mp_obj_t self_in);


struct _mp_obj_list_t;
void mp_obj_list_init(struct _mp_obj_list_t *o, size_t n);
mp_obj_t mp_obj_list_append(mp_obj_t self_in, mp_obj_t arg);
mp_obj_t mp_obj_list_remove(mp_obj_t self_in, mp_obj_t value);
void mp_obj_list_get(mp_obj_t self_in, size_t *len, mp_obj_t **items);
void mp_obj_list_set_len(mp_obj_t self_in, size_t len);
void mp_obj_list_store(mp_obj_t self_in, mp_obj_t index, mp_obj_t value);
mp_obj_t mp_obj_list_sort(size_t n_args, const mp_obj_t *args, mp_map_t *kwargs);


typedef struct _mp_obj_dict_t {
    mp_obj_base_t base;
    mp_map_t map;
} mp_obj_dict_t;
void mp_obj_dict_init(mp_obj_dict_t *dict, size_t n_args);
size_t mp_obj_dict_len(mp_obj_t self_in);
mp_obj_t mp_obj_dict_get(mp_obj_t self_in, mp_obj_t index);
mp_obj_t mp_obj_dict_store(mp_obj_t self_in, mp_obj_t key, mp_obj_t value);
mp_obj_t mp_obj_dict_delete(mp_obj_t self_in, mp_obj_t key);
mp_map_t *mp_obj_dict_get_map(mp_obj_t self_in);


void mp_obj_set_store(mp_obj_t self_in, mp_obj_t item);


void mp_obj_slice_get(mp_obj_t self_in, mp_obj_t *start, mp_obj_t *stop, mp_obj_t *step);



typedef struct _mp_obj_fun_builtin_fixed_t {
    mp_obj_base_t base;
    union {
        mp_fun_0_t _0;
        mp_fun_1_t _1;
        mp_fun_2_t _2;
        mp_fun_3_t _3;
    } fun;
} mp_obj_fun_builtin_fixed_t;


typedef struct _mp_obj_fun_builtin_var_t {
    mp_obj_base_t base;
    
# 794 "../micropython/py/obj.h" 3 4
   _Bool 
# 794 "../micropython/py/obj.h"
        is_kw : 1;
    mp_uint_t n_args_min : 15;
    mp_uint_t n_args_max : 16;
    union {
        mp_fun_var_t var;
        mp_fun_kw_t kw;
    } fun;
} mp_obj_fun_builtin_var_t;

qstr mp_obj_fun_get_name(mp_const_obj_t fun);
qstr mp_obj_code_get_name(const byte *code_info);

mp_obj_t mp_identity(mp_obj_t self);
extern const mp_obj_fun_builtin_fixed_t mp_identity_obj;
mp_obj_t mp_identity_getiter(mp_obj_t self, mp_obj_iter_buf_t *iter_buf);


typedef struct _mp_obj_module_t {
    mp_obj_base_t base;
    mp_obj_dict_t *globals;
} mp_obj_module_t;
mp_obj_dict_t *mp_obj_module_get_globals(mp_obj_t self_in);


# 817 "../micropython/py/obj.h" 3 4
_Bool 
# 817 "../micropython/py/obj.h"
    mp_obj_is_package(mp_obj_t module);



typedef struct _mp_obj_static_class_method_t {
    mp_obj_base_t base;
    mp_obj_t fun;
} mp_obj_static_class_method_t;
typedef struct _mp_rom_obj_static_class_method_t {
    mp_obj_base_t base;
    mp_rom_obj_t fun;
} mp_rom_obj_static_class_method_t;


const mp_obj_t *mp_obj_property_get(mp_obj_t self_in);




typedef struct {
    mp_uint_t start;
    mp_uint_t stop;
    mp_int_t step;
} mp_bound_slice_t;

void mp_seq_multiply(const void *items, size_t item_sz, size_t len, size_t times, void *dest);


# 844 "../micropython/py/obj.h" 3 4
_Bool 
# 844 "../micropython/py/obj.h"
    mp_seq_get_fast_slice_indexes(mp_uint_t len, mp_obj_t slice, mp_bound_slice_t *indexes);




# 848 "../micropython/py/obj.h" 3 4
_Bool 
# 848 "../micropython/py/obj.h"
    mp_seq_cmp_bytes(mp_uint_t op, const byte *data1, size_t len1, const byte *data2, size_t len2);

# 849 "../micropython/py/obj.h" 3 4
_Bool 
# 849 "../micropython/py/obj.h"
    mp_seq_cmp_objs(mp_uint_t op, const mp_obj_t *items1, size_t len1, const mp_obj_t *items2, size_t len2);
mp_obj_t mp_seq_index_obj(const mp_obj_t *items, size_t len, size_t n_args, const mp_obj_t *args);
mp_obj_t mp_seq_count_obj(const mp_obj_t *items, size_t len, mp_obj_t value);
mp_obj_t mp_seq_extract_slice(size_t len, const mp_obj_t *seq, mp_bound_slice_t *indexes);
# 40 "modmachine.c" 2
# 1 "../micropython/py/runtime.h" 1
# 29 "../micropython/py/runtime.h"
# 1 "../micropython/py/mpstate.h" 1
# 32 "../micropython/py/mpstate.h"
# 1 "../micropython/py/mpthread.h" 1
# 36 "../micropython/py/mpthread.h"
# 1 "./mpthreadport.h" 1
# 33 "./mpthreadport.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/semphr.h" 1
# 77 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/semphr.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h" 1
# 88 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
typedef void * QueueHandle_t;






typedef void * QueueSetHandle_t;






typedef void * QueueSetMemberHandle_t;
# 680 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, const BaseType_t xCopyPosition ) ;
# 809 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue, void * const pvBuffer ) ;
# 1001 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, const BaseType_t xJustPeek ) ;
# 1016 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue ) ;
# 1033 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue ) ;
# 1047 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
void vQueueDelete( QueueHandle_t xQueue ) ;
# 1428 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseType_t * const pxHigherPriorityTaskWoken, const BaseType_t xCopyPosition ) ;
BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken ) ;
# 1518 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const pxHigherPriorityTaskWoken ) ;





BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue ) ;
BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue ) ;
UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue ) ;
# 1543 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
BaseType_t xQueueAltGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xTicksToWait, BaseType_t xCopyPosition );
BaseType_t xQueueAltGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait, BaseType_t xJustPeeking );
# 1559 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRoutinePreviouslyWoken );
BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxTaskWoken );
BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait );
BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait );






QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType ) ;
QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue ) ;
QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount ) ;
QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t uxInitialCount, StaticQueue_t *pxStaticQueue ) ;
void* xQueueGetMutexHolder( QueueHandle_t xSemaphore ) ;





BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait ) ;
BaseType_t xQueueGiveMutexRecursive( QueueHandle_t pxMutex ) ;
# 1636 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
 QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, const uint8_t ucQueueType ) ;
# 1645 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
 QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, uint8_t *pucQueueStorage, StaticQueue_t *pxStaticQueue, const uint8_t ucQueueType ) ;
# 1696 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength ) ;
# 1720 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
BaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet ) ;
# 1739 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
BaseType_t xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet ) ;
# 1775 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h"
QueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet, const TickType_t xTicksToWait ) ;




QueueSetMemberHandle_t xQueueSelectFromSetFromISR( QueueSetHandle_t xQueueSet ) ;


void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait ) ;
BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue ) ;
void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber ) ;
UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue ) ;
uint8_t ucQueueGetQueueType( QueueHandle_t xQueue ) ;
# 78 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/semphr.h" 2

typedef QueueHandle_t SemaphoreHandle_t;
# 34 "./mpthreadport.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/freertos/include/freertos/queue.h" 1
# 35 "./mpthreadport.h" 2

typedef struct _mp_thread_mutex_t {
    SemaphoreHandle_t handle;
    StaticSemaphore_t buffer;
} mp_thread_mutex_t;

void mp_thread_init(void *stack, uint32_t stack_len);
void mp_thread_gc_others(void);
void mp_thread_deinit(void);
# 37 "../micropython/py/mpthread.h" 2


struct _mp_state_thread_t;

struct _mp_state_thread_t *mp_thread_get_state(void);
void mp_thread_set_state(void *state);
void mp_thread_create(void *(*entry)(void*), void *arg, size_t *stack_size);
void mp_thread_start(void);
void mp_thread_finish(void);
void mp_thread_mutex_init(mp_thread_mutex_t *mutex);
int mp_thread_mutex_lock(mp_thread_mutex_t *mutex, int wait);
void mp_thread_mutex_unlock(mp_thread_mutex_t *mutex);




# 1 "../micropython/py/mpstate.h" 1
# 54 "../micropython/py/mpthread.h" 2
# 33 "../micropython/py/mpstate.h" 2

# 1 "../micropython/py/nlr.h" 1
# 32 "../micropython/py/nlr.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/limits.h" 1
# 33 "../micropython/py/nlr.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/setjmp.h" 1
# 10 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/setjmp.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/machine/setjmp.h" 1


# 372 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/machine/setjmp.h"
typedef int jmp_buf[17];




# 11 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/setjmp.h" 2




void longjmp (jmp_buf __jmpb, int __retval)
   __attribute__ ((__noreturn__));



int setjmp (jmp_buf __jmpb);




# 34 "../micropython/py/nlr.h" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/assert.h" 1
# 39 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/newlib/include/assert.h"
void __assert (const char *, int, const char *) __attribute__ ((__noreturn__))
                                 ;
void __assert_func (const char *, int, const char *, const char *) __attribute__ ((__noreturn__))
                                 ;
# 35 "../micropython/py/nlr.h" 2



typedef struct _nlr_buf_t nlr_buf_t;
struct _nlr_buf_t {

    nlr_buf_t *prev;
    void *ret_val;
# 63 "../micropython/py/nlr.h"
    jmp_buf jmpbuf;

};




__attribute__((noreturn)) void nlr_setjmp_jump(void *val);
# 85 "../micropython/py/nlr.h"
__attribute__((noreturn)) void nlr_jump_fail(void *val);
# 35 "../micropython/py/mpstate.h" 2

# 1 "../micropython/py/objlist.h" 1
# 31 "../micropython/py/objlist.h"
typedef struct _mp_obj_list_t {
    mp_obj_base_t base;
    size_t alloc;
    size_t len;
    mp_obj_t *items;
} mp_obj_list_t;
# 37 "../micropython/py/mpstate.h" 2
# 1 "../micropython/py/objexcept.h" 1
# 30 "../micropython/py/objexcept.h"
# 1 "../micropython/py/objtuple.h" 1
# 31 "../micropython/py/objtuple.h"
typedef struct _mp_obj_tuple_t {
    mp_obj_base_t base;
    size_t len;
    mp_obj_t items[];
} mp_obj_tuple_t;

typedef struct _mp_rom_obj_tuple_t {
    mp_obj_base_t base;
    size_t len;
    mp_rom_obj_t items[];
} mp_rom_obj_tuple_t;

void mp_obj_tuple_print(const mp_print_t *print, mp_obj_t o_in, mp_print_kind_t kind);
mp_obj_t mp_obj_tuple_unary_op(mp_uint_t op, mp_obj_t self_in);
mp_obj_t mp_obj_tuple_binary_op(mp_uint_t op, mp_obj_t lhs, mp_obj_t rhs);
mp_obj_t mp_obj_tuple_subscr(mp_obj_t base, mp_obj_t index, mp_obj_t value);
mp_obj_t mp_obj_tuple_getiter(mp_obj_t o_in, mp_obj_iter_buf_t *iter_buf);

extern const mp_obj_type_t mp_type_attrtuple;
# 59 "../micropython/py/objtuple.h"
void mp_obj_attrtuple_print_helper(const mp_print_t *print, const qstr *fields, mp_obj_tuple_t *o);


mp_obj_t mp_obj_new_attrtuple(const qstr *fields, size_t n, const mp_obj_t *items);
# 31 "../micropython/py/objexcept.h" 2

typedef struct _mp_obj_exception_t {
    mp_obj_base_t base;
    size_t traceback_alloc : (8 * sizeof(size_t) / 2);
    size_t traceback_len : (8 * sizeof(size_t) / 2);
    size_t *traceback_data;
    mp_obj_tuple_t *args;
} mp_obj_exception_t;
# 38 "../micropython/py/mpstate.h" 2
# 58 "../micropython/py/mpstate.h"
typedef struct _mp_sched_item_t {
    mp_obj_t func;
    mp_obj_t arg;
} mp_sched_item_t;


typedef struct _mp_state_mem_t {






    byte *gc_alloc_table_start;
    size_t gc_alloc_table_byte_len;

    byte *gc_finaliser_table_start;

    byte *gc_pool_start;
    byte *gc_pool_end;

    int gc_stack_overflow;
    size_t gc_stack[(64)];
    size_t *gc_sp;
    uint16_t gc_lock_depth;




    uint16_t gc_auto_collect_enabled;


    size_t gc_alloc_amount;
    size_t gc_alloc_threshold;


    size_t gc_last_free_atb_index;







    mp_thread_mutex_t gc_mutex;

} mp_state_mem_t;



typedef struct _mp_state_vm_t {






    qstr_pool_t *last_pool;


    mp_obj_exception_t mp_emergency_exception_obj;
# 127 "../micropython/py/mpstate.h"
    byte *mp_emergency_exception_buf;





    mp_obj_exception_t mp_kbd_exception;



    mp_obj_dict_t mp_loaded_modules_dict;


    volatile mp_obj_t mp_pending_exception;


    volatile int16_t sched_state;
    uint16_t sched_sp;
    mp_sched_item_t sched_stack[(8)];
# 154 "../micropython/py/mpstate.h"
    mp_obj_dict_t dict_main;


    mp_obj_list_t mp_sys_path_obj;
    mp_obj_list_t mp_sys_argv_obj;



    mp_obj_dict_t *mp_module_builtins_override_dict;



    const char *readline_hist[80]; mp_obj_t machine_pin_irq_handler[40];
# 180 "../micropython/py/mpstate.h"
    struct _mp_vfs_mount_t *vfs_cur;
    struct _mp_vfs_mount_t *vfs_mount_table;
# 190 "../micropython/py/mpstate.h"
    byte *qstr_last_chunk;
    size_t qstr_last_alloc;
    size_t qstr_last_used;



    mp_thread_mutex_t qstr_mutex;


    mp_uint_t mp_optimise_value;



    mp_int_t mp_emergency_exception_buf_size;




    mp_thread_mutex_t gil_mutex;

} mp_state_vm_t;



typedef struct _mp_state_thread_t {
    mp_obj_dict_t *dict_locals;
    mp_obj_dict_t *dict_globals;


    nlr_buf_t *nlr_top;


    char *stack_top;


    size_t stack_limit;

} mp_state_thread_t;





typedef struct _mp_state_ctx_t {
    mp_state_thread_t thread;
    mp_state_vm_t vm;
    mp_state_mem_t mem;
} mp_state_ctx_t;

extern mp_state_ctx_t mp_state_ctx;





extern mp_state_thread_t *mp_thread_get_state(void);
# 30 "../micropython/py/runtime.h" 2


typedef enum {
    MP_VM_RETURN_NORMAL,
    MP_VM_RETURN_YIELD,
    MP_VM_RETURN_EXCEPTION,
} mp_vm_return_kind_t;

typedef enum {
    MP_ARG_BOOL = 0x001,
    MP_ARG_INT = 0x002,
    MP_ARG_OBJ = 0x003,
    MP_ARG_KIND_MASK = 0x0ff,
    MP_ARG_REQUIRED = 0x100,
    MP_ARG_KW_ONLY = 0x200,
} mp_arg_flag_t;

typedef union _mp_arg_val_t {
    
# 48 "../micropython/py/runtime.h" 3 4
   _Bool 
# 48 "../micropython/py/runtime.h"
        u_bool;
    mp_int_t u_int;
    mp_obj_t u_obj;
    mp_rom_obj_t u_rom_obj;
} mp_arg_val_t;

typedef struct _mp_arg_t {
    uint16_t qst;
    uint16_t flags;
    mp_arg_val_t defval;
} mp_arg_t;


extern const qstr mp_unary_op_method_name[];
extern const qstr mp_binary_op_method_name[];

void mp_init(void);
void mp_deinit(void);

void mp_handle_pending(void);
void mp_handle_pending_tail(mp_uint_t atomic_state);


void mp_sched_lock(void);
void mp_sched_unlock(void);
static inline unsigned int mp_sched_num_pending(void) { return (mp_state_ctx.vm.sched_sp); }

# 74 "../micropython/py/runtime.h" 3 4
_Bool 
# 74 "../micropython/py/runtime.h"
    mp_sched_schedule(mp_obj_t function, mp_obj_t arg);



int mp_print_mp_int(const mp_print_t *print, mp_obj_t x, int base, int base_char, int flags, char fill, int width, int prec);

void mp_arg_check_num(size_t n_args, size_t n_kw, size_t n_args_min, size_t n_args_max, 
# 80 "../micropython/py/runtime.h" 3 4
                                                                                       _Bool 
# 80 "../micropython/py/runtime.h"
                                                                                            takes_kw);
void mp_arg_parse_all(size_t n_pos, const mp_obj_t *pos, mp_map_t *kws, size_t n_allowed, const mp_arg_t *allowed, mp_arg_val_t *out_vals);
void mp_arg_parse_all_kw_array(size_t n_pos, size_t n_kw, const mp_obj_t *args, size_t n_allowed, const mp_arg_t *allowed, mp_arg_val_t *out_vals);
__attribute__((noreturn)) void mp_arg_error_terse_mismatch(void);
__attribute__((noreturn)) void mp_arg_error_unimpl_kw(void);

static inline mp_obj_dict_t *mp_locals_get(void) { return (mp_thread_get_state()->dict_locals); }
static inline void mp_locals_set(mp_obj_dict_t *d) { (mp_thread_get_state()->dict_locals) = d; }
static inline mp_obj_dict_t *mp_globals_get(void) { return (mp_thread_get_state()->dict_globals); }
static inline void mp_globals_set(mp_obj_dict_t *d) { (mp_thread_get_state()->dict_globals) = d; }

mp_obj_t mp_load_name(qstr qst);
mp_obj_t mp_load_global(qstr qst);
mp_obj_t mp_load_build_class(void);
void mp_store_name(qstr qst, mp_obj_t obj);
void mp_store_global(qstr qst, mp_obj_t obj);
void mp_delete_name(qstr qst);
void mp_delete_global(qstr qst);

mp_obj_t mp_unary_op(mp_uint_t op, mp_obj_t arg);
mp_obj_t mp_binary_op(mp_uint_t op, mp_obj_t lhs, mp_obj_t rhs);

mp_obj_t mp_call_function_0(mp_obj_t fun);
mp_obj_t mp_call_function_1(mp_obj_t fun, mp_obj_t arg);
mp_obj_t mp_call_function_2(mp_obj_t fun, mp_obj_t arg1, mp_obj_t arg2);
mp_obj_t mp_call_function_n_kw(mp_obj_t fun, size_t n_args, size_t n_kw, const mp_obj_t *args);
mp_obj_t mp_call_method_n_kw(size_t n_args, size_t n_kw, const mp_obj_t *args);
mp_obj_t mp_call_method_n_kw_var(
# 107 "../micropython/py/runtime.h" 3 4
                                _Bool 
# 107 "../micropython/py/runtime.h"
                                     have_self, size_t n_args_n_kw, const mp_obj_t *args);
mp_obj_t mp_call_method_self_n_kw(mp_obj_t meth, mp_obj_t self, size_t n_args, size_t n_kw, const mp_obj_t *args);

void mp_call_function_1_protected(mp_obj_t fun, mp_obj_t arg);
void mp_call_function_2_protected(mp_obj_t fun, mp_obj_t arg1, mp_obj_t arg2);

typedef struct _mp_call_args_t {
    mp_obj_t fun;
    size_t n_args, n_kw, n_alloc;
    mp_obj_t *args;
} mp_call_args_t;
# 127 "../micropython/py/runtime.h"
void mp_unpack_sequence(mp_obj_t seq, size_t num, mp_obj_t *items);
void mp_unpack_ex(mp_obj_t seq, size_t num, mp_obj_t *items);
mp_obj_t mp_store_map(mp_obj_t map, mp_obj_t key, mp_obj_t value);
mp_obj_t mp_load_attr(mp_obj_t base, qstr attr);
void mp_convert_member_lookup(mp_obj_t obj, const mp_obj_type_t *type, mp_obj_t member, mp_obj_t *dest);
void mp_load_method(mp_obj_t base, qstr attr, mp_obj_t *dest);
void mp_load_method_maybe(mp_obj_t base, qstr attr, mp_obj_t *dest);
void mp_load_super_method(qstr attr, mp_obj_t *dest);
void mp_store_attr(mp_obj_t base, qstr attr, mp_obj_t val);

mp_obj_t mp_getiter(mp_obj_t o, mp_obj_iter_buf_t *iter_buf);
mp_obj_t mp_iternext_allow_raise(mp_obj_t o);
mp_obj_t mp_iternext(mp_obj_t o);
mp_vm_return_kind_t mp_resume(mp_obj_t self_in, mp_obj_t send_value, mp_obj_t throw_value, mp_obj_t *ret_val);

mp_obj_t mp_make_raise_obj(mp_obj_t o);

mp_obj_t mp_import_name(qstr name, mp_obj_t fromlist, mp_obj_t level);
mp_obj_t mp_import_from(mp_obj_t module, qstr name);
void mp_import_all(mp_obj_t module);

__attribute__((noreturn)) void mp_raise_msg(const mp_obj_type_t *exc_type, const char *msg);

__attribute__((noreturn)) void mp_raise_ValueError(const char *msg);
__attribute__((noreturn)) void mp_raise_TypeError(const char *msg);
__attribute__((noreturn)) void mp_raise_OSError(int errno_);
__attribute__((noreturn)) void mp_not_implemented(const char *msg);
__attribute__((noreturn)) void mp_exc_recursion_depth(void);
# 167 "../micropython/py/runtime.h"
mp_uint_t mp_convert_obj_to_native(mp_obj_t obj, mp_uint_t type);
mp_obj_t mp_convert_native_to_obj(mp_uint_t val, mp_uint_t type);
mp_obj_t mp_native_call_function_n_kw(mp_obj_t fun_in, size_t n_args_kw, const mp_obj_t *args);
void mp_native_raise(mp_obj_t o);





void mp_warning(const char *msg, ...);
# 41 "modmachine.c" 2
# 1 "../micropython/extmod/machine_mem.h" 1
# 33 "../micropython/extmod/machine_mem.h"
typedef struct _machine_mem_obj_t {
    mp_obj_base_t base;
    unsigned elem_size;
} machine_mem_obj_t;

extern const mp_obj_type_t machine_mem_type;

extern const machine_mem_obj_t machine_mem8_obj;
extern const machine_mem_obj_t machine_mem16_obj;
extern const machine_mem_obj_t machine_mem32_obj;
# 42 "modmachine.c" 2
# 1 "../micropython/extmod/machine_pulse.h" 1
# 31 "../micropython/extmod/machine_pulse.h"
# 1 "../micropython/py/mphal.h" 1
# 34 "../micropython/py/mphal.h"
# 1 "./mphalport.h" 1
# 32 "./mphalport.h"
# 1 "../micropython/py/ringbuf.h" 1
# 29 "../micropython/py/ringbuf.h"
typedef struct _ringbuf_t {
    uint8_t *buf;
    uint16_t size;
    uint16_t iget;
    uint16_t iput;
} ringbuf_t;
# 48 "../micropython/py/ringbuf.h"
static inline int ringbuf_get(ringbuf_t *r) {
    if (r->iget == r->iput) {
        return -1;
    }
    uint8_t v = r->buf[r->iget++];
    if (r->iget >= r->size) {
        r->iget = 0;
    }
    return v;
}

static inline int ringbuf_put(ringbuf_t *r, uint8_t v) {
    uint32_t iput_new = r->iput + 1;
    if (iput_new >= r->size) {
        iput_new = 0;
    }
    if (iput_new == r->iget) {
        return -1;
    }
    r->buf[r->iput] = v;
    r->iput = iput_new;
    return 0;
}
# 33 "./mphalport.h" 2
# 1 "../micropython/lib/utils/interrupt_char.h" 1
# 27 "../micropython/lib/utils/interrupt_char.h"
extern int mp_interrupt_char;
void mp_hal_set_interrupt_char(int c);
void mp_keyboard_interrupt(void);
# 34 "./mphalport.h" 2

extern ringbuf_t stdin_ringbuf;

uint32_t mp_hal_ticks_us(void);
__attribute__((always_inline)) static inline uint32_t mp_hal_ticks_cpu(void) {
  uint32_t ccount;
  __asm__ __volatile__("rsr %0,ccount":"=a" (ccount));
  return ccount;
}

void mp_hal_delay_us(uint32_t);
void mp_hal_delay_us_fast(uint32_t);
void mp_hal_set_interrupt_char(int c);
uint32_t mp_hal_get_cpu_freq(void);
# 57 "./mphalport.h"
gpio_num_t machine_pin_get_id(mp_obj_t pin_in);



static inline void mp_hal_pin_input(gpio_num_t pin) {
    gpio_set_direction(pin, GPIO_MODE_INPUT);
}
static inline void mp_hal_pin_output(gpio_num_t pin) {
    gpio_set_direction(pin, GPIO_MODE_INPUT_OUTPUT);
}
static inline void mp_hal_pin_open_drain(gpio_num_t pin) {
    gpio_set_direction(pin, GPIO_MODE_INPUT_OUTPUT_OD);
}
static inline void mp_hal_pin_od_low(gpio_num_t pin) {
    gpio_set_level(pin, 0);
}
static inline void mp_hal_pin_od_high(gpio_num_t pin) {
    gpio_set_level(pin, 1);
}
static inline int mp_hal_pin_read(gpio_num_t pin) {
    return gpio_get_level(pin);
}
static inline void mp_hal_pin_write(gpio_num_t pin, int v) {
    gpio_set_level(pin, v);
}
# 35 "../micropython/py/mphal.h" 2



int mp_hal_stdin_rx_chr(void);



void mp_hal_stdout_tx_str(const char *str);



void mp_hal_stdout_tx_strn(const char *str, size_t len);



void mp_hal_stdout_tx_strn_cooked(const char *str, size_t len);



void mp_hal_delay_ms(mp_uint_t ms);



void mp_hal_delay_us(mp_uint_t us);



mp_uint_t mp_hal_ticks_ms(void);



mp_uint_t mp_hal_ticks_us(void);



mp_uint_t mp_hal_ticks_cpu(void);
# 32 "../micropython/extmod/machine_pulse.h" 2

mp_uint_t machine_time_pulse_us(gpio_num_t pin, int pulse_level, mp_uint_t timeout_us);

extern const mp_obj_fun_builtin_var_t machine_time_pulse_us_obj;
# 43 "modmachine.c" 2
# 1 "../micropython/extmod/machine_i2c.h" 1
# 34 "../micropython/extmod/machine_i2c.h"
typedef struct _mp_machine_i2c_p_t {
    int (*start)(mp_obj_base_t *obj);
    int (*stop)(mp_obj_base_t *obj);
    int (*read)(mp_obj_base_t *obj, uint8_t *dest, size_t len, 
# 37 "../micropython/extmod/machine_i2c.h" 3 4
                                                              _Bool 
# 37 "../micropython/extmod/machine_i2c.h"
                                                                   nack);
    int (*write)(mp_obj_base_t *obj, const uint8_t *src, size_t len);
    int (*readfrom)(mp_obj_base_t *obj, uint16_t addr, uint8_t *dest, size_t len, 
# 39 "../micropython/extmod/machine_i2c.h" 3 4
                                                                                 _Bool 
# 39 "../micropython/extmod/machine_i2c.h"
                                                                                      stop);
    int (*writeto)(mp_obj_base_t *obj, uint16_t addr, const uint8_t *src, size_t len, 
# 40 "../micropython/extmod/machine_i2c.h" 3 4
                                                                                     _Bool 
# 40 "../micropython/extmod/machine_i2c.h"
                                                                                          stop);
} mp_machine_i2c_p_t;

typedef struct _mp_machine_soft_i2c_obj_t {
    mp_obj_base_t base;
    uint32_t us_delay;
    uint32_t us_timeout;
    gpio_num_t scl;
    gpio_num_t sda;
} mp_machine_soft_i2c_obj_t;

extern const mp_obj_type_t machine_i2c_type;
extern const mp_obj_dict_t mp_machine_soft_i2c_locals_dict;

int mp_machine_soft_i2c_readfrom(mp_obj_base_t *self_in, uint16_t addr, uint8_t *dest, size_t len, 
# 54 "../micropython/extmod/machine_i2c.h" 3 4
                                                                                                  _Bool 
# 54 "../micropython/extmod/machine_i2c.h"
                                                                                                       stop);
int mp_machine_soft_i2c_writeto(mp_obj_base_t *self_in, uint16_t addr, const uint8_t *src, size_t len, 
# 55 "../micropython/extmod/machine_i2c.h" 3 4
                                                                                                      _Bool 
# 55 "../micropython/extmod/machine_i2c.h"
                                                                                                           stop);
# 44 "modmachine.c" 2

# 1 "modmachine.h" 1





extern const mp_obj_type_t machine_timer_type;
extern const mp_obj_type_t machine_pin_type;
extern const mp_obj_type_t machine_touchpad_type;
extern const mp_obj_type_t machine_adc_type;
extern const mp_obj_type_t machine_dac_type;
extern const mp_obj_type_t machine_pwm_type;
extern const mp_obj_type_t machine_hw_spi_type;
extern const mp_obj_type_t machine_uart_type;

void machine_pins_init(void);
void machine_pins_deinit(void);
# 46 "modmachine.c" 2

# 1 "mpsleep.h" 1
# 21 "mpsleep.h"
typedef enum {
    MPSLEEP_PWRON_RESET = 0,
    MPSLEEP_HARD_RESET,
    MPSLEEP_WDT_RESET,
    MPSLEEP_DEEPSLEEP_RESET,
    MPSLEEP_SOFT_RESET,
    MPSLEEP_BROWN_OUT_RESET,
} mpsleep_reset_cause_t;

typedef enum {
    MPSLEEP_PWRON_WAKE = 0,
    MPSLEEP_GPIO_WAKE,
    MPSLEEP_RTC_WAKE,
    MPSLEEP_ULP_WAKE
} mpsleep_wake_reason_t;




void mpsleep_init0 (void);
void mpsleep_signal_soft_reset (void);
mpsleep_reset_cause_t mpsleep_get_reset_cause (void);
mpsleep_wake_reason_t mpsleep_get_wake_reason (void);
void mpsleep_get_reset_desc (char *reset_reason);
void mpsleep_get_wake_desc (char *wake_reason);
# 48 "modmachine.c" 2
# 1 "machrtc.h" 1
# 32 "machrtc.h"
extern const mp_obj_type_t mach_rtc_type;

typedef struct {
    uint64_t ext1_pins;
    int8_t ext0_pin;
    
# 37 "machrtc.h" 3 4
   _Bool 
# 37 "machrtc.h"
        wake_on_touch : 1;
    
# 38 "machrtc.h" 3 4
   _Bool 
# 38 "machrtc.h"
        ext0_level : 1;
    
# 39 "machrtc.h" 3 4
   _Bool 
# 39 "machrtc.h"
        ext1_level : 1;
} machine_rtc_config_t;


void rtc_init0(void);
void mach_rtc_synced (void);
# 49 "modmachine.c" 2



extern machine_rtc_config_t machine_rtc_config;

static mp_obj_t machine_freq(size_t n_args, const mp_obj_t *args) {
    if (n_args == 0) {

        return mp_obj_new_int(ets_get_cpu_frequency() * 1000000);
    } else {

        mp_int_t freq = mp_obj_get_int(args[0]) / 1000000;
        if (freq != 80 && freq != 160 && freq != 240) {
            nlr_setjmp_jump(((void*)mp_obj_new_exception_msg(&mp_type_ValueError, "frequency can only be either 80Mhz, 160MHz or 240MHz")))
                                                                        ;
        }



        return (((mp_obj_t)&mp_const_none_obj));
    }
}
static const mp_obj_fun_builtin_var_t machine_freq_obj = {{&mp_type_fun_builtin_var}, 
# 71 "modmachine.c" 3 4
      0
# 71 "modmachine.c"
      , 0, 1, .fun.var = machine_freq};

static mp_obj_t machine_reset(void) {
    esp_restart();
    return (((mp_obj_t)&mp_const_none_obj));
}
static const mp_obj_fun_builtin_fixed_t machine_reset_obj = {{&mp_type_fun_builtin_0}, .fun._0 = machine_reset};

static mp_obj_t machine_unique_id(void) {
    uint8_t chipid[6];
    esp_efuse_mac_get_default(chipid);
    return mp_obj_new_bytes(chipid, 6);
}
static const mp_obj_fun_builtin_fixed_t machine_unique_id_obj = {{&mp_type_fun_builtin_0}, .fun._0 = machine_unique_id};

static mp_obj_t machine_idle(void) {
    vPortYield();
    return (((mp_obj_t)&mp_const_none_obj));
}
static const mp_obj_fun_builtin_fixed_t machine_idle_obj = {{&mp_type_fun_builtin_0}, .fun._0 = machine_idle};

static mp_obj_t machine_disable_irq(void) {
    uint32_t state = portENTER_CRITICAL_NESTED();
    return mp_obj_new_int(state);
}
const mp_obj_fun_builtin_fixed_t machine_disable_irq_obj = {{&mp_type_fun_builtin_0}, .fun._0 = machine_disable_irq};

static mp_obj_t machine_enable_irq(mp_obj_t state_in) {
    uint32_t state = mp_obj_get_int(state_in);
    do { ; _xtos_set_intlevel(state); } while (0);
    return (((mp_obj_t)&mp_const_none_obj));
}
const mp_obj_fun_builtin_fixed_t machine_enable_irq_obj = {{&mp_type_fun_builtin_1}, .fun._1 = machine_enable_irq};



static mp_obj_t machine_free_heap(void) {
    return mp_obj_new_int(xPortGetFreeHeapSize());
}
const mp_obj_fun_builtin_fixed_t machine_free_heap_obj = {{&mp_type_fun_builtin_0}, .fun._0 = machine_free_heap};

# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/dport_reg.h" 1
# 20 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/dport_reg.h"
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/dport_access.h" 1
# 21 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/dport_access.h"
void esp_dport_access_stall_other_cpu_start(void);
void esp_dport_access_stall_other_cpu_end(void);
# 41 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/dport_access.h"
static inline uint32_t __attribute__((section(".iram1"))) DPORT_REG_READ(uint32_t reg)
{
    uint32_t val;

    esp_dport_access_stall_other_cpu_start();
    val = (*(volatile uint32_t *)(reg));
    esp_dport_access_stall_other_cpu_end();

    return val;
}
# 92 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/dport_access.h"
static inline uint32_t __attribute__((section(".iram1"))) DPORT_READ_PERI_REG(uint32_t addr)
{
    uint32_t val;

    esp_dport_access_stall_other_cpu_start();
    val = (*((volatile uint32_t *)(addr)));
    esp_dport_access_stall_other_cpu_end();

    return val;
}
# 21 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/dport_reg.h" 2
# 113 "modmachine.c" 2
# 1 "/home/LoBo2_Razno/ESP32/MicroPython_ESP32_psRAM_LoBo/esp-idf_psram/components/soc/esp32/include/soc/rtc_cntl_reg.h" 1
# 114 "modmachine.c" 2


static mp_obj_t machine_deepsleep(size_t n_args, const mp_obj_t *pos_args, mp_map_t *kw_args) {

    enum {ARG_sleep_ms};
    const mp_arg_t allowed_args[] = {
        { MP_QSTR_sleep_ms, MP_ARG_INT, { .u_int = 0 } },
    };

    mp_arg_val_t args[(sizeof(allowed_args) / sizeof((allowed_args)[0]))];
    mp_arg_parse_all(n_args, pos_args, kw_args, (sizeof(allowed_args) / sizeof((allowed_args)[0])), allowed_args, args);


    mp_int_t expiry = args[ARG_sleep_ms].u_int;

    if (expiry != 0) {
        esp_deep_sleep_enable_timer_wakeup(expiry * 1000);
    }

    if (machine_rtc_config.ext0_pin != -1) {
        esp_deep_sleep_enable_ext0_wakeup(machine_rtc_config.ext0_pin, machine_rtc_config.ext0_level ? 1 : 0);
    }

    if (machine_rtc_config.ext1_pins != 0) {
        esp_deep_sleep_enable_ext1_wakeup(
            machine_rtc_config.ext1_pins,
            machine_rtc_config.ext1_level ? ESP_EXT1_WAKEUP_ANY_HIGH : ESP_EXT1_WAKEUP_ALL_LOW);
    }

    if (machine_rtc_config.wake_on_touch) {
        esp_deep_sleep_enable_touchpad_wakeup();
    }


    mp_thread_deinit();


    mp_hal_stdout_tx_str("ESP32: DEEP SLEEP\r\n");


    machine_pins_deinit();

    mp_deinit();
    fflush(((__getreent())->_stdout));

    (*((volatile uint32_t *)(((0x3ff48000 + 0x74))))) = (uint32_t)((DPORT_READ_PERI_REG((0x3ff48000 + 0x74))|(((1UL << (31))))));
    (*((volatile uint32_t *)(((0x3ff48000 + 0x74))))) = (uint32_t)((DPORT_READ_PERI_REG((0x3ff48000 + 0x74))|(((1UL << (22))))));
    esp_deep_sleep_start();
    return (((mp_obj_t)&mp_const_none_obj));
}
static const mp_obj_fun_builtin_var_t machine_deepsleep_obj = {{&mp_type_fun_builtin_var}, 
# 164 "modmachine.c" 3 4
      1
# 164 "modmachine.c"
      , 0, (0xffff), .fun.kw = machine_deepsleep};


static mp_obj_t machine_wake_reason (void) {
    mpsleep_reset_cause_t reset_reason = mpsleep_get_reset_cause ();
    mpsleep_wake_reason_t wake_reason = mpsleep_get_wake_reason();
    mp_obj_t tuple[2];

    tuple[0] = mp_obj_new_int(wake_reason);
    tuple[1] = mp_obj_new_int(reset_reason);
    return mp_obj_new_tuple(2, tuple);
}
static const mp_obj_fun_builtin_fixed_t machine_wake_reason_obj = {{&mp_type_fun_builtin_0}, .fun._0 = machine_wake_reason};


static mp_obj_t machine_wake_desc (void) {
    char reason[24] = { 0 };
    mp_obj_t tuple[2];

    mpsleep_get_reset_desc(reason);
    tuple[0] = mp_obj_new_str(reason, strlen(reason), 0);
    mpsleep_get_wake_desc(reason);
    tuple[1] = mp_obj_new_str(reason, strlen(reason), 0);
    return mp_obj_new_tuple(2, tuple);
}
static const mp_obj_fun_builtin_fixed_t machine_wake_desc_obj = {{&mp_type_fun_builtin_0}, .fun._0 = machine_wake_desc};


static const mp_rom_map_elem_t machine_module_globals_table[] = {
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR___name__)) << 2) | 2)), ((mp_obj_t)((((mp_uint_t)(MP_QSTR_umachine)) << 2) | 2)) },

    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mem8)) << 2) | 2)), (&machine_mem8_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mem16)) << 2) | 2)), (&machine_mem16_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_mem32)) << 2) | 2)), (&machine_mem32_obj) },

    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_freq)) << 2) | 2)), (&machine_freq_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_reset)) << 2) | 2)), (&machine_reset_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_unique_id)) << 2) | 2)), (&machine_unique_id_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_idle)) << 2) | 2)), (&machine_idle_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_deepsleep)) << 2) | 2)), (&machine_deepsleep_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_wake_reason)) << 2) | 2)), (&machine_wake_reason_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_wake_description)) << 2) | 2)), (&machine_wake_desc_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_free_heap)) << 2) | 2)), (&machine_free_heap_obj) },

    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_disable_irq)) << 2) | 2)), (&machine_disable_irq_obj) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_enable_irq)) << 2) | 2)), (&machine_enable_irq_obj) },

    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_time_pulse_us)) << 2) | 2)), (&machine_time_pulse_us_obj) },

    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_Timer)) << 2) | 2)), (&machine_timer_type) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_Pin)) << 2) | 2)), (&machine_pin_type) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_TouchPad)) << 2) | 2)), (&machine_touchpad_type) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_ADC)) << 2) | 2)), (&machine_adc_type) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_DAC)) << 2) | 2)), (&machine_dac_type) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_I2C)) << 2) | 2)), (&machine_i2c_type) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_PWM)) << 2) | 2)), (&machine_pwm_type) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_SPI)) << 2) | 2)), (&machine_hw_spi_type) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_UART)) << 2) | 2)), (&machine_uart_type) },
    { ((mp_obj_t)((((mp_uint_t)(MP_QSTR_RTC)) << 2) | 2)), (&mach_rtc_type) },
};

static const mp_obj_dict_t machine_module_globals = { .base = {&mp_type_dict}, .map = { .all_keys_are_qstrs = 1, .is_fixed = 1, .is_ordered = 1, .used = (sizeof(machine_module_globals_table) / sizeof((machine_module_globals_table)[0])), .alloc = (sizeof(machine_module_globals_table) / sizeof((machine_module_globals_table)[0])), .table = (mp_map_elem_t*)(mp_rom_map_elem_t*)machine_module_globals_table, }, };

const mp_obj_module_t mp_module_machine = {
    .base = { &mp_type_module },
    .globals = (mp_obj_dict_t*)&machine_module_globals,
};
